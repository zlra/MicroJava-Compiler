// generated with ast extension for cup
// version 0.8
// 20/7/2018 12:42:56


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(DeclarationList DeclarationList);
    public void visit(Relop Relop);
    public void visit(CondTermOrList CondTermOrList);
    public void visit(OptionalOptionalActPars OptionalOptionalActPars);
    public void visit(OptionalExtends OptionalExtends);
    public void visit(MethodDeclarationList MethodDeclarationList);
    public void visit(ExpressionList ExpressionList);
    public void visit(Factor Factor);
    public void visit(DesignatorAllList DesignatorAllList);
    public void visit(CondFactList CondFactList);
    public void visit(VarDeclarationElement VarDeclarationElement);
    public void visit(GeneralDeclaration GeneralDeclaration);
    public void visit(Term Term);
    public void visit(OptionalSquareBrackets OptionalSquareBrackets);
    public void visit(MulOp MulOp);
    public void visit(IfCondition IfCondition);
    public void visit(OptionalStatements OptionalStatements);
    public void visit(OptionalFormPars OptionalFormPars);
    public void visit(ReturnStatement ReturnStatement);
    public void visit(DesignatorAssignExpression DesignatorAssignExpression);
    public void visit(AnyType AnyType);
    public void visit(VarDeclarationList VarDeclarationList);
    public void visit(OptionalActPars OptionalActPars);
    public void visit(ConstElement ConstElement);
    public void visit(ActPars ActPars);
    public void visit(DesignatorList DesignatorList);
    public void visit(AddOp AddOp);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(ConstAssignList ConstAssignList);
    public void visit(PrintStatement PrintStatement);
    public void visit(Statement Statement);
    public void visit(CondFact CondFact);
    public void visit(FormPar FormPar);
    public void visit(DesignatorElement DesignatorElement);
    public void visit(OptionalVarDeclList OptionalVarDeclList);
    public void visit(OptionalMinus OptionalMinus);
    public void visit(FormPars FormPars);
    public void visit(OptionalElse OptionalElse);
    public void visit(OptionalMethodDeclList OptionalMethodDeclList);
    public void visit(SingleActPars SingleActPars);
    public void visit(MultiActPars MultiActPars);
    public void visit(NonExistingActPars NonExistingActPars);
    public void visit(ExistingActPars ExistingActPars);
    public void visit(OptionalOptionalActParsNotExist OptionalOptionalActParsNotExist);
    public void visit(OptionalOptionalActParsExist OptionalOptionalActParsExist);
    public void visit(FactorBracketExpression FactorBracketExpression);
    public void visit(FactorNewTypeWithExpr FactorNewTypeWithExpr);
    public void visit(FactorNewTypeNoExpr FactorNewTypeNoExpr);
    public void visit(FactorBoolConst FactorBoolConst);
    public void visit(FactorCharConst FactorCharConst);
    public void visit(FactorNumConst FactorNumConst);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(TermSingleFactor TermSingleFactor);
    public void visit(TermMultiFactor TermMultiFactor);
    public void visit(MulOpMod MulOpMod);
    public void visit(MulOpDivide MulOpDivide);
    public void visit(MulOpMultiply MulOpMultiply);
    public void visit(MinusAddOp MinusAddOp);
    public void visit(PlusAddOp PlusAddOp);
    public void visit(SingleExpressionList SingleExpressionList);
    public void visit(MultiExpressionlist MultiExpressionlist);
    public void visit(NonExistingOptionalMinus NonExistingOptionalMinus);
    public void visit(ExistingOptionalMinus ExistingOptionalMinus);
    public void visit(Expression Expression);
    public void visit(DesignatorElementExpr DesignatorElementExpr);
    public void visit(DesignatorElementIdent DesignatorElementIdent);
    public void visit(ExistingDesignatorListSingle ExistingDesignatorListSingle);
    public void visit(ExistingDesignatorListMulti ExistingDesignatorListMulti);
    public void visit(ArrayOrClassName ArrayOrClassName);
    public void visit(DesignatorArrayOrClass DesignatorArrayOrClass);
    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(Designator Designator);
    public void visit(DesignatorAssignExpressionDerived1 DesignatorAssignExpressionDerived1);
    public void visit(DesignatorAssignExpress DesignatorAssignExpress);
    public void visit(DecDesignatorStatement DecDesignatorStatement);
    public void visit(IncDesignatorStatement IncDesignatorStatement);
    public void visit(ActParsDesignatorStatement ActParsDesignatorStatement);
    public void visit(AssignDesignatorStatement AssignDesignatorStatement);
    public void visit(GteRelop GteRelop);
    public void visit(GtRelop GtRelop);
    public void visit(LteRelop LteRelop);
    public void visit(LtRelop LtRelop);
    public void visit(NeqRelop NeqRelop);
    public void visit(EqRelop EqRelop);
    public void visit(MultiCondFact MultiCondFact);
    public void visit(SingleCondFact SingleCondFact);
    public void visit(NonExistingCondFactList NonExistingCondFactList);
    public void visit(ExistingCondFactList ExistingCondFactList);
    public void visit(CondTerm CondTerm);
    public void visit(NonExistingCondTermList NonExistingCondTermList);
    public void visit(ExistingCondTermList ExistingCondTermList);
    public void visit(Condition Condition);
    public void visit(NonExistingOptionalStatement NonExistingOptionalStatement);
    public void visit(ExistingOptionalElse ExistingOptionalElse);
    public void visit(IfConditionDerived1 IfConditionDerived1);
    public void visit(IfCond IfCond);
    public void visit(IfStatement IfStatement);
    public void visit(PrintStatementWithNumConst PrintStatementWithNumConst);
    public void visit(PrintStatementWithoutNumConst PrintStatementWithoutNumConst);
    public void visit(ReadSt ReadSt);
    public void visit(ReadStatement ReadStatement);
    public void visit(NonEmptyReturnStatement NonEmptyReturnStatement);
    public void visit(EmptyReturnStatement EmptyReturnStatement);
    public void visit(DoStatement DoStatement);
    public void visit(ListStm ListStm);
    public void visit(PrintStm PrintStm);
    public void visit(ReadStm ReadStm);
    public void visit(ReturnStm ReturnStm);
    public void visit(ContinueStm ContinueStm);
    public void visit(BreakStm BreakStm);
    public void visit(DoStm DoStm);
    public void visit(IfStm IfStm);
    public void visit(DesignatorStm DesignatorStm);
    public void visit(EmptyOptionalStatements EmptyOptionalStatements);
    public void visit(NonEmptyOptionalStatements NonEmptyOptionalStatements);
    public void visit(FormParDerived1 FormParDerived1);
    public void visit(FormParamNoErr FormParamNoErr);
    public void visit(SingleFormPars SingleFormPars);
    public void visit(MultiFormPars MultiFormPars);
    public void visit(NonExistingFormPars NonExistingFormPars);
    public void visit(ExistingFormPars ExistingFormPars);
    public void visit(VoidType VoidType);
    public void visit(NotVoid NotVoid);
    public void visit(MethodName MethodName);
    public void visit(MethodDeclaration MethodDeclaration);
    public void visit(NonExistingMethodDeclarationList NonExistingMethodDeclarationList);
    public void visit(ExistingMethodDeclarationList ExistingMethodDeclarationList);
    public void visit(NonExistingMethodDeclList NonExistingMethodDeclList);
    public void visit(ExistingMethodDeclList ExistingMethodDeclList);
    public void visit(NonExistingOptionalVarDeclList NonExistingOptionalVarDeclList);
    public void visit(ExistingOptionalVarDeclList ExistingOptionalVarDeclList);
    public void visit(ClassDeclBody ClassDeclBody);
    public void visit(NonExistingOptionalExtends NonExistingOptionalExtends);
    public void visit(ExistingOptionalExtends ExistingOptionalExtends);
    public void visit(ClassDeclaration ClassDeclaration);
    public void visit(NonExistingSquareBrackets NonExistingSquareBrackets);
    public void visit(ExistingSquareBrackets ExistingSquareBrackets);
    public void visit(VarDeclarationElementDerived1 VarDeclarationElementDerived1);
    public void visit(VarDeclarationElem VarDeclarationElem);
    public void visit(MultiVarDeclarationList MultiVarDeclarationList);
    public void visit(SingleVarDeclarationList SingleVarDeclarationList);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(ConstElementChar ConstElementChar);
    public void visit(ConstElementBoolean ConstElementBoolean);
    public void visit(ConstElementInteger ConstElementInteger);
    public void visit(MultiConstAssignList MultiConstAssignList);
    public void visit(SingleConstAssignList SingleConstAssignList);
    public void visit(Type Type);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(ClassDecl ClassDecl);
    public void visit(VarDecl VarDecl);
    public void visit(ConstDecl ConstDecl);
    public void visit(DeclarationListEmpty DeclarationListEmpty);
    public void visit(DeclarationListNotEmpty DeclarationListNotEmpty);
    public void visit(ProgramName ProgramName);
    public void visit(Program Program);

}
