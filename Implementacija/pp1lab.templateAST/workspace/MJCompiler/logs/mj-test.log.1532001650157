INFO  16:46:45,493 - Compiling source file: C:\Users\zlra\Desktop\Programski Prevodioci\Implementacija\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  16:46:45,497 - #2 program
INFO  16:46:45,498 - #17 P
INFO  16:46:45,498 - #16 const
INFO  16:46:45,498 - #17 int
INFO  16:46:45,498 - #17 size
INFO  16:46:45,498 - #34 =
INFO  16:46:45,498 - #18 10
INFO  16:46:45,498 - #37 ;
INFO  16:46:45,498 - #4 class
INFO  16:46:45,498 - #17 Table
INFO  16:46:45,498 - #44 {
INFO  16:46:45,498 - #17 int
INFO  16:46:45,498 - #17 pos
INFO  16:46:45,498 - #42 [
INFO  16:46:45,499 - #43 ]
INFO  16:46:45,499 - #38 ,
INFO  16:46:45,499 - #17 neg
INFO  16:46:45,499 - #42 [
INFO  16:46:45,499 - #43 ]
INFO  16:46:45,499 - #37 ;
INFO  16:46:45,510 - #44 {
INFO  16:46:45,510 - #11 void
INFO  16:46:45,510 - #17 putp
INFO  16:46:45,510 - #40 (
INFO  16:46:45,510 - #17 int
INFO  16:46:45,510 - #17 a
INFO  16:46:45,510 - #38 ,
INFO  16:46:45,510 - #17 int
INFO  16:46:45,510 - #17 idx
INFO  16:46:45,510 - #41 )
INFO  16:46:45,510 - #44 {
INFO  16:46:45,510 - #17 this
INFO  16:46:45,510 - #39 .
INFO  16:46:45,510 - #17 pos
INFO  16:46:45,510 - #42 [
INFO  16:46:45,510 - #17 idx
INFO  16:46:45,510 - #43 ]
INFO  16:46:45,511 - #34 =
INFO  16:46:45,511 - #17 a
INFO  16:46:45,511 - #37 ;
INFO  16:46:45,511 - #45 }
INFO  16:46:45,511 - #11 void
INFO  16:46:45,511 - #17 putn
INFO  16:46:45,511 - #40 (
INFO  16:46:45,511 - #17 int
INFO  16:46:45,511 - #17 a
INFO  16:46:45,511 - #38 ,
INFO  16:46:45,511 - #17 int
INFO  16:46:45,511 - #17 idx
INFO  16:46:45,511 - #41 )
INFO  16:46:45,512 - #44 {
INFO  16:46:45,512 - #17 this
INFO  16:46:45,512 - #39 .
INFO  16:46:45,512 - #17 neg
INFO  16:46:45,512 - #42 [
INFO  16:46:45,512 - #17 idx
INFO  16:46:45,512 - #43 ]
INFO  16:46:45,512 - #34 =
INFO  16:46:45,512 - #17 a
INFO  16:46:45,512 - #37 ;
INFO  16:46:45,512 - #45 }
INFO  16:46:45,512 - #17 int
INFO  16:46:45,512 - #17 getp
INFO  16:46:45,513 - #40 (
INFO  16:46:45,513 - #17 int
INFO  16:46:45,513 - #17 idx
INFO  16:46:45,513 - #41 )
INFO  16:46:45,513 - #44 {
INFO  16:46:45,513 - #10 return
INFO  16:46:45,513 - #17 pos
INFO  16:46:45,513 - #42 [
INFO  16:46:45,513 - #17 idx
INFO  16:46:45,513 - #43 ]
INFO  16:46:45,513 - #37 ;
INFO  16:46:45,513 - #45 }
INFO  16:46:45,513 - #17 int
INFO  16:46:45,513 - #17 getn
INFO  16:46:45,513 - #40 (
INFO  16:46:45,513 - #17 int
INFO  16:46:45,513 - #17 idx
INFO  16:46:45,513 - #41 )
INFO  16:46:45,513 - #44 {
INFO  16:46:45,513 - #10 return
INFO  16:46:45,513 - #17 neg
INFO  16:46:45,513 - #42 [
INFO  16:46:45,513 - #17 idx
INFO  16:46:45,513 - #43 ]
INFO  16:46:45,513 - #37 ;
INFO  16:46:45,513 - #45 }
INFO  16:46:45,514 - #45 }
INFO  16:46:45,514 - #45 }
INFO  16:46:45,514 - #17 Table
INFO  16:46:45,514 - #17 val
INFO  16:46:45,514 - #37 ;
INFO  16:46:45,514 - #44 {
INFO  16:46:45,514 - #11 void
INFO  16:46:45,514 - #17 main
INFO  16:46:45,514 - #40 (
INFO  16:46:45,514 - #41 )
INFO  16:46:45,514 - #17 int
INFO  16:46:45,514 - #17 x
INFO  16:46:45,514 - #38 ,
INFO  16:46:45,514 - #17 i
INFO  16:46:45,514 - #37 ;
INFO  16:46:45,514 - #44 {
INFO  16:46:45,514 - #17 val
INFO  16:46:45,514 - #34 =
INFO  16:46:45,514 - #7 new
INFO  16:46:45,514 - #17 Table
INFO  16:46:45,514 - #37 ;
INFO  16:46:45,514 - #17 val
INFO  16:46:45,514 - #39 .
INFO  16:46:45,514 - #17 pos
INFO  16:46:45,514 - #34 =
INFO  16:46:45,514 - #7 new
INFO  16:46:45,514 - #17 int
INFO  16:46:45,514 - #42 [
INFO  16:46:45,515 - #17 size
INFO  16:46:45,515 - #43 ]
INFO  16:46:45,515 - #37 ;
INFO  16:46:45,515 - #17 val
INFO  16:46:45,515 - #39 .
INFO  16:46:45,515 - #17 neg
INFO  16:46:45,517 - #34 =
INFO  16:46:45,517 - #7 new
INFO  16:46:45,517 - #17 int
INFO  16:46:45,517 - #42 [
INFO  16:46:45,517 - #17 size
INFO  16:46:45,517 - #43 ]
INFO  16:46:45,517 - #37 ;
INFO  16:46:45,517 - #17 i
INFO  16:46:45,517 - #34 =
INFO  16:46:45,517 - #18 0
INFO  16:46:45,517 - #37 ;
INFO  16:46:45,517 - #12 do
INFO  16:46:45,517 - #44 {
INFO  16:46:45,518 - #17 val
INFO  16:46:45,518 - #39 .
INFO  16:46:45,518 - #17 putp
INFO  16:46:45,518 - #40 (
INFO  16:46:45,518 - #18 0
INFO  16:46:45,518 - #38 ,
INFO  16:46:45,518 - #17 i
INFO  16:46:45,518 - #41 )
INFO  16:46:45,518 - #37 ;
INFO  16:46:45,518 - #17 val
INFO  16:46:45,518 - #39 .
INFO  16:46:45,518 - #17 putn
INFO  16:46:45,518 - #40 (
INFO  16:46:45,518 - #18 0
INFO  16:46:45,518 - #38 ,
INFO  16:46:45,519 - #17 i
INFO  16:46:45,519 - #41 )
INFO  16:46:45,519 - #37 ;
INFO  16:46:45,519 - #17 i
INFO  16:46:45,519 - #35 ++
INFO  16:46:45,519 - #37 ;
INFO  16:46:45,519 - #45 }
INFO  16:46:45,519 - #13 while
INFO  16:46:45,519 - #40 (
INFO  16:46:45,519 - #17 i
INFO  16:46:45,519 - #28 <
INFO  16:46:45,519 - #17 size
INFO  16:46:45,519 - #41 )
INFO  16:46:45,519 - #37 ;
INFO  16:46:45,519 - #9 read
INFO  16:46:45,519 - #40 (
INFO  16:46:45,519 - #17 x
INFO  16:46:45,520 - #41 )
INFO  16:46:45,520 - #37 ;
INFO  16:46:45,520 - #12 do
INFO  16:46:45,520 - #44 {
INFO  16:46:45,520 - #6 if
INFO  16:46:45,520 - #40 (
INFO  16:46:45,520 - #17 x
INFO  16:46:45,520 - #31 >=
INFO  16:46:45,520 - #17 size
INFO  16:46:45,520 - #41 )
INFO  16:46:45,520 - #3 break
INFO  16:46:45,520 - #37 ;
INFO  16:46:45,520 - #6 if
INFO  16:46:45,520 - #40 (
INFO  16:46:45,520 - #18 0
INFO  16:46:45,520 - #29 <=
INFO  16:46:45,520 - #17 x
INFO  16:46:45,521 - #32 &&
INFO  16:46:45,521 - #17 x
INFO  16:46:45,521 - #28 <
INFO  16:46:45,521 - #17 size
INFO  16:46:45,521 - #41 )
INFO  16:46:45,521 - #44 {
INFO  16:46:45,521 - #17 val
INFO  16:46:45,521 - #39 .
INFO  16:46:45,521 - #17 putp
INFO  16:46:45,521 - #40 (
INFO  16:46:45,521 - #17 val
INFO  16:46:45,521 - #39 .
INFO  16:46:45,521 - #17 getp
INFO  16:46:45,521 - #40 (
INFO  16:46:45,521 - #17 x
INFO  16:46:45,521 - #41 )
INFO  16:46:45,521 - #21 +
INFO  16:46:45,521 - #18 1
INFO  16:46:45,522 - #41 )
INFO  16:46:45,522 - #37 ;
INFO  16:46:45,522 - #45 }
INFO  16:46:45,522 - #5 else
INFO  16:46:45,522 - #6 if
INFO  16:46:45,522 - #40 (
INFO  16:46:45,522 - #22 -
INFO  16:46:45,522 - #17 size
INFO  16:46:45,522 - #28 <
INFO  16:46:45,522 - #17 x
INFO  16:46:45,522 - #32 &&
INFO  16:46:45,522 - #17 x
INFO  16:46:45,522 - #28 <
INFO  16:46:45,522 - #18 0
INFO  16:46:45,522 - #41 )
INFO  16:46:45,522 - #44 {
INFO  16:46:45,522 - #17 val
INFO  16:46:45,522 - #39 .
INFO  16:46:45,522 - #17 putn
INFO  16:46:45,522 - #40 (
INFO  16:46:45,522 - #17 val
INFO  16:46:45,522 - #39 .
INFO  16:46:45,522 - #17 getn
INFO  16:46:45,522 - #40 (
INFO  16:46:45,522 - #22 -
INFO  16:46:45,523 - #17 x
INFO  16:46:45,523 - #41 )
INFO  16:46:45,523 - #21 +
INFO  16:46:45,523 - #18 1
INFO  16:46:45,523 - #41 )
INFO  16:46:45,523 - #37 ;
INFO  16:46:45,523 - #45 }
INFO  16:46:45,523 - #9 read
INFO  16:46:45,523 - #40 (
INFO  16:46:45,523 - #17 x
INFO  16:46:45,523 - #41 )
INFO  16:46:45,523 - #37 ;
INFO  16:46:45,523 - #45 }
INFO  16:46:45,523 - #45 }
INFO  16:46:45,523 - #13 while
INFO  16:46:45,523 - #40 (
INFO  16:46:45,523 - #20 true
INFO  16:46:45,523 - #41 )
INFO  16:46:45,523 - #37 ;
INFO  16:46:45,523 - #45 }
