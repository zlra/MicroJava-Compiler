INFO  16:13:26,293 - Compiling source file: C:\Users\zlra\Desktop\Programski Prevodioci\Implementacija\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  16:13:26,347 - #2 program
INFO  16:13:26,347 - #45 P
INFO  16:13:26,347 - #16 const
INFO  16:13:26,348 - #45 int
INFO  16:13:26,348 - #45 size
INFO  16:13:26,349 - #30 =
INFO  16:13:26,349 - #42 10
INFO  16:13:26,349 - #33 ;
INFO  16:13:26,350 - #45 int
INFO  16:13:26,350 - #45 x
INFO  16:13:26,350 - #34 ,
INFO  16:13:26,351 - #45 abcd
INFO  16:13:26,351 - #34 ,
INFO  16:13:26,352 - #45 ok
INFO  16:13:26,352 - #34 ,
INFO  16:13:26,352 - #45 nijeok
INFO  16:13:26,352 - #34 ,
INFO  16:13:26,352 - #42 2
ERROR 16:13:26,352 - 
Sintaksna greska na liniji 3
INFO  16:13:26,354 - #17 +
INFO  16:13:26,354 - #42 5
INFO  16:13:26,354 - #34 ,
INFO  16:13:26,354 - #44 'c'
INFO  16:13:26,354 - #34 ,
INFO  16:13:26,354 - #45 i
INFO  16:13:26,355 - #33 ;
INFO  16:13:26,355 - #4 class
ERROR 16:13:26,355 - Greska pri definiciji globalne promenljive na liniji 3
INFO  16:13:26,356 - #45 Table
INFO  16:13:26,356 - #40 {
INFO  16:13:26,357 - #45 int
INFO  16:13:26,357 - #45 pos
INFO  16:13:26,357 - #38 [
INFO  16:13:26,357 - #39 ]
INFO  16:13:26,357 - #34 ,
INFO  16:13:26,358 - #45 neg
INFO  16:13:26,358 - #38 [
INFO  16:13:26,358 - #39 ]
INFO  16:13:26,358 - #33 ;
INFO  16:13:26,358 - #40 {
INFO  16:13:26,358 - #11 void
INFO  16:13:26,358 - #45 putp
INFO  16:13:26,359 - #36 (
INFO  16:13:26,359 - #45 int
INFO  16:13:26,360 - #45 a
INFO  16:13:26,360 - #34 ,
INFO  16:13:26,360 - #45 int
INFO  16:13:26,360 - #45 idx
INFO  16:13:26,360 - #37 )
INFO  16:13:26,360 - #40 {
INFO  16:13:26,360 - #45 this
INFO  16:13:26,361 - #35 .
INFO  16:13:26,361 - #45 pos
INFO  16:13:26,361 - #38 [
INFO  16:13:26,361 - #45 idx
INFO  16:13:26,363 - #39 ]
INFO  16:13:26,365 - #30 =
INFO  16:13:26,365 - #45 a
INFO  16:13:26,365 - #33 ;
INFO  16:13:26,368 - #41 }
INFO  16:13:26,368 - #11 void
INFO  16:13:26,369 - #45 putn
INFO  16:13:26,369 - #36 (
INFO  16:13:26,369 - #45 int
INFO  16:13:26,369 - #45 a
INFO  16:13:26,369 - #34 ,
INFO  16:13:26,369 - #45 int
INFO  16:13:26,369 - #45 idx
INFO  16:13:26,369 - #37 )
INFO  16:13:26,369 - #40 {
INFO  16:13:26,369 - #45 this
INFO  16:13:26,369 - #35 .
INFO  16:13:26,369 - #45 neg
INFO  16:13:26,369 - #38 [
INFO  16:13:26,370 - #45 idx
INFO  16:13:26,370 - #39 ]
INFO  16:13:26,370 - #30 =
INFO  16:13:26,370 - #45 a
INFO  16:13:26,370 - #33 ;
INFO  16:13:26,370 - #41 }
INFO  16:13:26,370 - #45 int
INFO  16:13:26,370 - #45 getp
INFO  16:13:26,370 - #36 (
INFO  16:13:26,370 - #45 int
INFO  16:13:26,370 - #45 idx
INFO  16:13:26,370 - #37 )
INFO  16:13:26,371 - #40 {
INFO  16:13:26,371 - #10 return
INFO  16:13:26,371 - #45 pos
INFO  16:13:26,371 - #38 [
INFO  16:13:26,371 - #45 idx
INFO  16:13:26,371 - #39 ]
INFO  16:13:26,371 - #33 ;
INFO  16:13:26,371 - #41 }
INFO  16:13:26,371 - #45 int
INFO  16:13:26,371 - #45 getn
INFO  16:13:26,372 - #36 (
INFO  16:13:26,372 - #45 int
INFO  16:13:26,372 - #45 idx
INFO  16:13:26,372 - #38 [
INFO  16:13:26,372 - #42 2
ERROR 16:13:26,372 - 
Sintaksna greska na liniji 10
INFO  16:13:26,372 - #39 ]
INFO  16:13:26,372 - #37 )
INFO  16:13:26,372 - #40 {
INFO  16:13:26,372 - #10 return
INFO  16:13:26,372 - #45 neg
ERROR 16:13:26,372 - Greska pri deklaraciji formalnog parametra funkcije na liniji 9
INFO  16:13:26,373 - #38 [
INFO  16:13:26,373 - #45 idx
INFO  16:13:26,373 - #39 ]
INFO  16:13:26,373 - #33 ;
INFO  16:13:26,373 - #41 }
INFO  16:13:26,373 - #41 }
INFO  16:13:26,373 - #41 }
INFO  16:13:26,374 - #45 Table
INFO  16:13:26,375 - #45 val
INFO  16:13:26,375 - #33 ;
INFO  16:13:26,375 - #40 {
INFO  16:13:26,375 - #11 void
INFO  16:13:26,375 - #45 main
INFO  16:13:26,375 - #36 (
INFO  16:13:26,375 - #37 )
INFO  16:13:26,376 - #40 {
INFO  16:13:26,376 - #45 val
INFO  16:13:26,376 - #30 =
INFO  16:13:26,376 - #7 new
INFO  16:13:26,376 - #45 Table
INFO  16:13:26,376 - #33 ;
INFO  16:13:26,376 - #45 val
INFO  16:13:26,376 - #35 .
INFO  16:13:26,376 - #45 pos
INFO  16:13:26,376 - #30 =
INFO  16:13:26,376 - #7 new
INFO  16:13:26,376 - #45 int
INFO  16:13:26,376 - #38 [
INFO  16:13:26,376 - #45 size
INFO  16:13:26,377 - #39 ]
INFO  16:13:26,377 - #33 ;
INFO  16:13:26,377 - #45 val
INFO  16:13:26,377 - #35 .
INFO  16:13:26,377 - #45 neg
INFO  16:13:26,377 - #30 =
INFO  16:13:26,377 - #7 new
INFO  16:13:26,377 - #42 2
ERROR 16:13:26,377 - 
Sintaksna greska na liniji 20
INFO  16:13:26,377 - #38 [
INFO  16:13:26,377 - #45 size
INFO  16:13:26,377 - #39 ]
INFO  16:13:26,377 - #33 ;
INFO  16:13:26,377 - #45 i
INFO  16:13:26,377 - #30 =
INFO  16:13:26,377 - #42 0
ERROR 16:13:26,377 - Greska pri definiciji iskazu dodele na liniji 20
INFO  16:13:26,378 - #33 ;
INFO  16:13:26,378 - #12 do
INFO  16:13:26,378 - #40 {
INFO  16:13:26,378 - #45 val
INFO  16:13:26,378 - #35 .
INFO  16:13:26,378 - #45 putp
INFO  16:13:26,378 - #36 (
INFO  16:13:26,378 - #42 0
INFO  16:13:26,378 - #34 ,
INFO  16:13:26,378 - #45 i
INFO  16:13:26,379 - #37 )
INFO  16:13:26,379 - #33 ;
INFO  16:13:26,379 - #45 val
INFO  16:13:26,379 - #35 .
INFO  16:13:26,379 - #45 putn
INFO  16:13:26,379 - #36 (
INFO  16:13:26,379 - #42 0
INFO  16:13:26,379 - #34 ,
INFO  16:13:26,379 - #45 i
INFO  16:13:26,379 - #37 )
INFO  16:13:26,379 - #33 ;
INFO  16:13:26,379 - #45 i
INFO  16:13:26,379 - #31 ++
INFO  16:13:26,379 - #33 ;
INFO  16:13:26,379 - #41 }
INFO  16:13:26,380 - #13 while
INFO  16:13:26,380 - #36 (
INFO  16:13:26,380 - #45 i
INFO  16:13:26,380 - #22 <
INFO  16:13:26,380 - #45 size
INFO  16:13:26,380 - #37 )
INFO  16:13:26,382 - #33 ;
INFO  16:13:26,382 - #9 read
INFO  16:13:26,383 - #36 (
INFO  16:13:26,383 - #45 x
INFO  16:13:26,383 - #37 )
INFO  16:13:26,383 - #33 ;
INFO  16:13:26,383 - #12 do
INFO  16:13:26,383 - #40 {
INFO  16:13:26,383 - #6 if
INFO  16:13:26,383 - #36 (
INFO  16:13:26,383 - #45 x
INFO  16:13:26,383 - #25 >=
INFO  16:13:26,383 - #45 size
INFO  16:13:26,383 - #37 )
INFO  16:13:26,385 - #3 break
INFO  16:13:26,385 - #33 ;
INFO  16:13:26,385 - #6 if
INFO  16:13:26,386 - #36 (
INFO  16:13:26,386 - #42 0
INFO  16:13:26,386 - #23 <=
INFO  16:13:26,386 - #45 x
INFO  16:13:26,387 - #26 &&
INFO  16:13:26,387 - #45 x
INFO  16:13:26,387 - #22 <
INFO  16:13:26,387 - #45 size
INFO  16:13:26,387 - #37 )
INFO  16:13:26,387 - #40 {
INFO  16:13:26,387 - #45 val
INFO  16:13:26,387 - #35 .
INFO  16:13:26,387 - #45 putp
INFO  16:13:26,387 - #36 (
INFO  16:13:26,387 - #45 val
INFO  16:13:26,387 - #35 .
INFO  16:13:26,387 - #45 getp
INFO  16:13:26,387 - #36 (
INFO  16:13:26,387 - #45 x
INFO  16:13:26,387 - #37 )
INFO  16:13:26,387 - #17 +
INFO  16:13:26,387 - #42 1
INFO  16:13:26,388 - #37 )
INFO  16:13:26,388 - #33 ;
INFO  16:13:26,388 - #41 }
INFO  16:13:26,388 - #5 else
INFO  16:13:26,388 - #6 if
INFO  16:13:26,388 - #36 (
INFO  16:13:26,388 - #18 -
INFO  16:13:26,388 - #45 size
INFO  16:13:26,389 - #22 <
INFO  16:13:26,389 - #45 x
INFO  16:13:26,389 - #26 &&
INFO  16:13:26,389 - #45 x
INFO  16:13:26,389 - #22 <
INFO  16:13:26,389 - #42 0
INFO  16:13:26,389 - #37 )
INFO  16:13:26,389 - #40 {
INFO  16:13:26,389 - #45 val
INFO  16:13:26,389 - #35 .
INFO  16:13:26,389 - #45 putn
INFO  16:13:26,389 - #36 (
INFO  16:13:26,389 - #45 val
INFO  16:13:26,389 - #35 .
INFO  16:13:26,389 - #45 getn
INFO  16:13:26,389 - #36 (
INFO  16:13:26,389 - #18 -
INFO  16:13:26,390 - #45 x
INFO  16:13:26,390 - #37 )
INFO  16:13:26,390 - #17 +
INFO  16:13:26,390 - #42 1
INFO  16:13:26,390 - #37 )
INFO  16:13:26,390 - #33 ;
INFO  16:13:26,390 - #41 }
INFO  16:13:26,390 - #9 read
INFO  16:13:26,390 - #36 (
INFO  16:13:26,390 - #45 x
INFO  16:13:26,390 - #37 )
INFO  16:13:26,390 - #33 ;
INFO  16:13:26,390 - #41 }
INFO  16:13:26,390 - #13 while
INFO  16:13:26,390 - #36 (
INFO  16:13:26,390 - #43 true
INFO  16:13:26,391 - #37 )
INFO  16:13:26,391 - #33 ;
INFO  16:13:26,391 - #41 }
INFO  16:13:26,391 - #41 }
INFO  16:13:26,392 - Print calls = 265
