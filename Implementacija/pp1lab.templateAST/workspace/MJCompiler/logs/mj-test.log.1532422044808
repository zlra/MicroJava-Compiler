INFO  10:46:36,070 - Compiling source file: C:\Users\zlra\Desktop\Programski Prevodioci\Implementacija\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  10:46:36,106 - #2 program
INFO  10:46:36,107 - #45 P
INFO  10:46:36,107 - #16 const
INFO  10:46:36,108 - #45 int
INFO  10:46:36,108 - #45 size
INFO  10:46:36,109 - #30 =
INFO  10:46:36,109 - #42 10
INFO  10:46:36,109 - #33 ;
INFO  10:46:36,110 - #4 class
INFO  10:46:36,110 - #45 Table
INFO  10:46:36,110 - #40 {
INFO  10:46:36,111 - #45 int
INFO  10:46:36,112 - #45 pos
INFO  10:46:36,112 - #38 [
INFO  10:46:36,112 - #39 ]
INFO  10:46:36,112 - #34 ,
INFO  10:46:36,113 - #45 neg
INFO  10:46:36,113 - #38 [
INFO  10:46:36,114 - #39 ]
INFO  10:46:36,114 - #33 ;
INFO  10:46:36,115 - #40 {
INFO  10:46:36,115 - #11 void
INFO  10:46:36,115 - #45 putp
INFO  10:46:36,116 - #36 (
INFO  10:46:36,116 - #45 int
INFO  10:46:36,116 - #45 a
INFO  10:46:36,116 - #34 ,
INFO  10:46:36,117 - #45 int
INFO  10:46:36,117 - #45 idx
INFO  10:46:36,117 - #37 )
INFO  10:46:36,118 - #40 {
INFO  10:46:36,118 - #45 this
INFO  10:46:36,118 - #35 .
INFO  10:46:36,119 - #45 pos
INFO  10:46:36,119 - #38 [
INFO  10:46:36,119 - #45 idx
INFO  10:46:36,120 - #39 ]
INFO  10:46:36,122 - #30 =
INFO  10:46:36,122 - #45 a
INFO  10:46:36,122 - #33 ;
INFO  10:46:36,122 - #41 }
INFO  10:46:36,123 - #11 void
INFO  10:46:36,124 - #45 putn
INFO  10:46:36,124 - #36 (
INFO  10:46:36,124 - #45 int
INFO  10:46:36,124 - #45 a
INFO  10:46:36,124 - #34 ,
INFO  10:46:36,124 - #45 int
INFO  10:46:36,124 - #45 idx
INFO  10:46:36,124 - #37 )
INFO  10:46:36,124 - #40 {
INFO  10:46:36,124 - #45 this
INFO  10:46:36,124 - #35 .
INFO  10:46:36,124 - #45 neg
INFO  10:46:36,124 - #38 [
INFO  10:46:36,124 - #45 idx
INFO  10:46:36,124 - #39 ]
INFO  10:46:36,125 - #30 =
INFO  10:46:36,125 - #45 a
INFO  10:46:36,126 - #33 ;
INFO  10:46:36,127 - #41 }
INFO  10:46:36,127 - #45 int
INFO  10:46:36,127 - #45 getp
INFO  10:46:36,127 - #36 (
INFO  10:46:36,127 - #45 int
INFO  10:46:36,127 - #45 idx
INFO  10:46:36,127 - #37 )
INFO  10:46:36,127 - #40 {
INFO  10:46:36,127 - #10 return
INFO  10:46:36,127 - #45 pos
INFO  10:46:36,127 - #38 [
INFO  10:46:36,128 - #45 idx
INFO  10:46:36,128 - #39 ]
INFO  10:46:36,128 - #33 ;
INFO  10:46:36,128 - #41 }
INFO  10:46:36,128 - #45 int
INFO  10:46:36,128 - #45 getn
INFO  10:46:36,128 - #36 (
INFO  10:46:36,128 - #45 int
INFO  10:46:36,128 - #45 idx
INFO  10:46:36,128 - #37 )
INFO  10:46:36,128 - #40 {
INFO  10:46:36,128 - #10 return
INFO  10:46:36,128 - #45 neg
INFO  10:46:36,128 - #38 [
INFO  10:46:36,128 - #45 idx
INFO  10:46:36,128 - #39 ]
INFO  10:46:36,128 - #33 ;
INFO  10:46:36,129 - #41 }
INFO  10:46:36,129 - #41 }
INFO  10:46:36,129 - #41 }
INFO  10:46:36,129 - #45 Table
INFO  10:46:36,130 - #45 val
INFO  10:46:36,130 - #33 ;
INFO  10:46:36,130 - #40 {
INFO  10:46:36,130 - #11 void
INFO  10:46:36,130 - #45 main
INFO  10:46:36,130 - #36 (
INFO  10:46:36,130 - #37 )
INFO  10:46:36,131 - #45 int
INFO  10:46:36,131 - #45 x
INFO  10:46:36,131 - #34 ,
INFO  10:46:36,131 - #45 i
INFO  10:46:36,131 - #33 ;
INFO  10:46:36,131 - #40 {
INFO  10:46:36,131 - #45 val
INFO  10:46:36,131 - #30 =
INFO  10:46:36,131 - #7 new
INFO  10:46:36,131 - #45 Table
INFO  10:46:36,131 - #33 ;
INFO  10:46:36,131 - #45 val
INFO  10:46:36,131 - #35 .
INFO  10:46:36,131 - #45 pos
INFO  10:46:36,131 - #30 =
INFO  10:46:36,131 - #7 new
INFO  10:46:36,131 - #45 int
INFO  10:46:36,131 - #38 [
INFO  10:46:36,131 - #45 size
INFO  10:46:36,132 - #39 ]
INFO  10:46:36,132 - #33 ;
INFO  10:46:36,132 - #45 val
INFO  10:46:36,132 - #35 .
INFO  10:46:36,132 - #45 neg
INFO  10:46:36,132 - #30 =
INFO  10:46:36,132 - #7 new
INFO  10:46:36,132 - #45 int
INFO  10:46:36,132 - #38 [
INFO  10:46:36,132 - #45 size
INFO  10:46:36,132 - #39 ]
INFO  10:46:36,132 - #33 ;
INFO  10:46:36,132 - #45 i
INFO  10:46:36,132 - #30 =
INFO  10:46:36,132 - #42 0
INFO  10:46:36,132 - #33 ;
INFO  10:46:36,133 - #12 do
INFO  10:46:36,133 - #40 {
INFO  10:46:36,133 - #45 val
INFO  10:46:36,133 - #35 .
INFO  10:46:36,133 - #45 putp
INFO  10:46:36,133 - #36 (
INFO  10:46:36,133 - #42 0
INFO  10:46:36,133 - #34 ,
INFO  10:46:36,133 - #45 i
INFO  10:46:36,133 - #37 )
INFO  10:46:36,133 - #33 ;
INFO  10:46:36,134 - #45 val
INFO  10:46:36,134 - #35 .
INFO  10:46:36,134 - #45 putn
INFO  10:46:36,134 - #36 (
INFO  10:46:36,134 - #42 0
INFO  10:46:36,134 - #34 ,
INFO  10:46:36,134 - #45 i
INFO  10:46:36,134 - #37 )
INFO  10:46:36,134 - #33 ;
INFO  10:46:36,134 - #45 i
INFO  10:46:36,134 - #31 ++
INFO  10:46:36,134 - #33 ;
INFO  10:46:36,134 - #41 }
INFO  10:46:36,134 - #13 while
INFO  10:46:36,134 - #36 (
INFO  10:46:36,134 - #45 i
INFO  10:46:36,134 - #22 <
INFO  10:46:36,134 - #45 size
INFO  10:46:36,135 - #37 )
INFO  10:46:36,137 - #33 ;
INFO  10:46:36,137 - #9 read
INFO  10:46:36,137 - #36 (
INFO  10:46:36,137 - #45 x
INFO  10:46:36,137 - #37 )
INFO  10:46:36,138 - #33 ;
INFO  10:46:36,138 - #12 do
INFO  10:46:36,138 - #40 {
INFO  10:46:36,138 - #6 if
INFO  10:46:36,138 - #36 (
INFO  10:46:36,138 - #45 x
INFO  10:46:36,138 - #25 >=
INFO  10:46:36,138 - #45 size
INFO  10:46:36,139 - #37 )
INFO  10:46:36,139 - #3 break
INFO  10:46:36,139 - #33 ;
INFO  10:46:36,139 - #6 if
INFO  10:46:36,140 - #36 (
INFO  10:46:36,140 - #42 0
INFO  10:46:36,140 - #23 <=
INFO  10:46:36,140 - #45 x
INFO  10:46:36,141 - #26 &&
INFO  10:46:36,141 - #45 x
INFO  10:46:36,141 - #22 <
INFO  10:46:36,141 - #45 size
INFO  10:46:36,141 - #37 )
INFO  10:46:36,141 - #40 {
INFO  10:46:36,141 - #45 val
INFO  10:46:36,141 - #35 .
INFO  10:46:36,141 - #45 putp
INFO  10:46:36,141 - #36 (
INFO  10:46:36,141 - #45 val
INFO  10:46:36,141 - #35 .
INFO  10:46:36,141 - #45 getp
INFO  10:46:36,141 - #36 (
INFO  10:46:36,141 - #45 x
INFO  10:46:36,141 - #37 )
INFO  10:46:36,142 - #17 +
INFO  10:46:36,142 - #42 1
INFO  10:46:36,142 - #37 )
INFO  10:46:36,143 - #33 ;
INFO  10:46:36,143 - #41 }
INFO  10:46:36,143 - #5 else
INFO  10:46:36,143 - #6 if
INFO  10:46:36,143 - #36 (
INFO  10:46:36,143 - #18 -
INFO  10:46:36,143 - #45 size
INFO  10:46:36,144 - #22 <
INFO  10:46:36,144 - #45 x
INFO  10:46:36,144 - #26 &&
INFO  10:46:36,144 - #45 x
INFO  10:46:36,144 - #22 <
INFO  10:46:36,144 - #42 0
INFO  10:46:36,144 - #37 )
INFO  10:46:36,144 - #40 {
INFO  10:46:36,144 - #45 val
INFO  10:46:36,144 - #35 .
INFO  10:46:36,144 - #45 putn
INFO  10:46:36,144 - #36 (
INFO  10:46:36,144 - #45 val
INFO  10:46:36,144 - #35 .
INFO  10:46:36,144 - #45 getn
INFO  10:46:36,144 - #36 (
INFO  10:46:36,144 - #18 -
INFO  10:46:36,144 - #45 x
INFO  10:46:36,144 - #37 )
INFO  10:46:36,144 - #17 +
INFO  10:46:36,144 - #42 1
INFO  10:46:36,144 - #37 )
INFO  10:46:36,144 - #33 ;
INFO  10:46:36,144 - #41 }
INFO  10:46:36,145 - #9 read
INFO  10:46:36,145 - #36 (
INFO  10:46:36,145 - #45 x
INFO  10:46:36,145 - #37 )
INFO  10:46:36,145 - #33 ;
INFO  10:46:36,145 - #41 }
INFO  10:46:36,145 - #13 while
INFO  10:46:36,145 - #36 (
INFO  10:46:36,145 - #43 true
INFO  10:46:36,145 - #37 )
INFO  10:46:36,145 - #33 ;
INFO  10:46:36,145 - #41 }
INFO  10:46:36,145 - #41 }
INFO  10:46:36,146 - Print calls = 250
