INFO  16:37:28,578 - Compiling source file: C:\Users\zlra\Desktop\Programski Prevodioci\Implementacija\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  16:37:28,582 - #2 program
INFO  16:37:28,582 - #17 P
INFO  16:37:28,582 - #17 const
INFO  16:37:28,582 - #17 int
INFO  16:37:28,582 - #17 size
INFO  16:37:28,582 - #34 =
INFO  16:37:28,583 - #18 10
INFO  16:37:28,583 - #37 ;
INFO  16:37:28,583 - #4 class
INFO  16:37:28,583 - #17 Table
INFO  16:37:28,583 - #44 {
INFO  16:37:28,583 - #17 int
INFO  16:37:28,583 - #17 pos
INFO  16:37:28,583 - #42 [
INFO  16:37:28,583 - #43 ]
INFO  16:37:28,583 - #38 ,
INFO  16:37:28,583 - #17 neg
INFO  16:37:28,583 - #42 [
INFO  16:37:28,583 - #43 ]
INFO  16:37:28,583 - #37 ;
INFO  16:37:28,614 - #44 {
INFO  16:37:28,614 - #11 void
INFO  16:37:28,614 - #17 putp
INFO  16:37:28,614 - #40 (
INFO  16:37:28,614 - #17 int
INFO  16:37:28,614 - #17 a
INFO  16:37:28,614 - #38 ,
INFO  16:37:28,614 - #17 int
INFO  16:37:28,614 - #17 idx
INFO  16:37:28,614 - #41 )
INFO  16:37:28,614 - #44 {
INFO  16:37:28,614 - #17 this
INFO  16:37:28,615 - #39 .
INFO  16:37:28,615 - #17 pos
INFO  16:37:28,615 - #42 [
INFO  16:37:28,615 - #17 idx
INFO  16:37:28,615 - #43 ]
INFO  16:37:28,615 - #34 =
INFO  16:37:28,615 - #17 a
INFO  16:37:28,615 - #37 ;
INFO  16:37:28,615 - #45 }
INFO  16:37:28,615 - #11 void
INFO  16:37:28,615 - #17 putn
INFO  16:37:28,615 - #40 (
INFO  16:37:28,615 - #17 int
INFO  16:37:28,615 - #17 a
INFO  16:37:28,615 - #38 ,
INFO  16:37:28,615 - #17 int
INFO  16:37:28,615 - #17 idx
INFO  16:37:28,615 - #41 )
INFO  16:37:28,615 - #44 {
INFO  16:37:28,615 - #17 this
INFO  16:37:28,615 - #39 .
INFO  16:37:28,615 - #17 neg
INFO  16:37:28,616 - #42 [
INFO  16:37:28,616 - #17 idx
INFO  16:37:28,616 - #43 ]
INFO  16:37:28,616 - #34 =
INFO  16:37:28,616 - #17 a
INFO  16:37:28,618 - #37 ;
INFO  16:37:28,618 - #45 }
INFO  16:37:28,618 - #17 int
INFO  16:37:28,618 - #17 getp
INFO  16:37:28,618 - #40 (
INFO  16:37:28,618 - #17 int
INFO  16:37:28,618 - #17 idx
INFO  16:37:28,618 - #41 )
INFO  16:37:28,618 - #44 {
INFO  16:37:28,618 - #10 return
INFO  16:37:28,618 - #17 pos
INFO  16:37:28,618 - #42 [
INFO  16:37:28,618 - #17 idx
INFO  16:37:28,618 - #43 ]
INFO  16:37:28,618 - #37 ;
INFO  16:37:28,618 - #45 }
INFO  16:37:28,619 - #17 int
INFO  16:37:28,619 - #17 getn
INFO  16:37:28,619 - #40 (
INFO  16:37:28,619 - #17 int
INFO  16:37:28,619 - #17 idx
INFO  16:37:28,619 - #41 )
INFO  16:37:28,619 - #44 {
INFO  16:37:28,619 - #10 return
INFO  16:37:28,619 - #17 neg
INFO  16:37:28,619 - #42 [
INFO  16:37:28,619 - #17 idx
INFO  16:37:28,619 - #43 ]
INFO  16:37:28,619 - #37 ;
INFO  16:37:28,619 - #45 }
INFO  16:37:28,619 - #45 }
INFO  16:37:28,619 - #45 }
INFO  16:37:28,619 - #17 Table
INFO  16:37:28,619 - #17 val
INFO  16:37:28,619 - #37 ;
INFO  16:37:28,619 - #44 {
INFO  16:37:28,620 - #11 void
INFO  16:37:28,620 - #17 main
INFO  16:37:28,620 - #40 (
INFO  16:37:28,620 - #41 )
INFO  16:37:28,620 - #17 int
INFO  16:37:28,620 - #17 x
INFO  16:37:28,620 - #38 ,
INFO  16:37:28,620 - #17 i
INFO  16:37:28,620 - #37 ;
INFO  16:37:28,620 - #44 {
INFO  16:37:28,620 - #17 val
INFO  16:37:28,620 - #34 =
INFO  16:37:28,620 - #7 new
INFO  16:37:28,620 - #17 Table
INFO  16:37:28,620 - #37 ;
INFO  16:37:28,620 - #17 val
INFO  16:37:28,620 - #39 .
INFO  16:37:28,620 - #17 pos
INFO  16:37:28,620 - #34 =
INFO  16:37:28,620 - #7 new
INFO  16:37:28,620 - #17 int
INFO  16:37:28,620 - #42 [
INFO  16:37:28,620 - #17 size
INFO  16:37:28,620 - #43 ]
INFO  16:37:28,621 - #37 ;
INFO  16:37:28,621 - #17 val
INFO  16:37:28,621 - #39 .
INFO  16:37:28,621 - #17 neg
INFO  16:37:28,621 - #34 =
INFO  16:37:28,621 - #7 new
INFO  16:37:28,621 - #17 int
INFO  16:37:28,621 - #42 [
INFO  16:37:28,621 - #17 size
INFO  16:37:28,621 - #43 ]
INFO  16:37:28,621 - #37 ;
INFO  16:37:28,621 - #17 i
INFO  16:37:28,621 - #34 =
INFO  16:37:28,621 - #18 0
INFO  16:37:28,621 - #37 ;
INFO  16:37:28,621 - #12 do
INFO  16:37:28,621 - #44 {
INFO  16:37:28,621 - #17 val
INFO  16:37:28,621 - #39 .
INFO  16:37:28,621 - #17 putp
INFO  16:37:28,621 - #40 (
INFO  16:37:28,621 - #18 0
INFO  16:37:28,621 - #38 ,
INFO  16:37:28,621 - #17 i
INFO  16:37:28,622 - #41 )
INFO  16:37:28,622 - #37 ;
INFO  16:37:28,622 - #17 val
INFO  16:37:28,622 - #39 .
INFO  16:37:28,622 - #17 putn
INFO  16:37:28,622 - #40 (
INFO  16:37:28,622 - #18 0
INFO  16:37:28,622 - #38 ,
INFO  16:37:28,622 - #17 i
INFO  16:37:28,622 - #41 )
INFO  16:37:28,622 - #37 ;
INFO  16:37:28,622 - #17 i
INFO  16:37:28,622 - #35 ++
INFO  16:37:28,622 - #37 ;
INFO  16:37:28,622 - #45 }
INFO  16:37:28,622 - #13 while
INFO  16:37:28,622 - #40 (
INFO  16:37:28,622 - #17 i
INFO  16:37:28,622 - #28 <
INFO  16:37:28,622 - #17 size
INFO  16:37:28,622 - #41 )
INFO  16:37:28,622 - #37 ;
INFO  16:37:28,622 - #9 read
INFO  16:37:28,622 - #40 (
INFO  16:37:28,622 - #17 x
INFO  16:37:28,623 - #41 )
INFO  16:37:28,623 - #37 ;
INFO  16:37:28,623 - #12 do
INFO  16:37:28,623 - #44 {
INFO  16:37:28,623 - #6 if
INFO  16:37:28,623 - #40 (
INFO  16:37:28,623 - #17 x
INFO  16:37:28,623 - #31 >=
INFO  16:37:28,623 - #17 size
INFO  16:37:28,623 - #41 )
INFO  16:37:28,623 - #3 break
INFO  16:37:28,623 - #37 ;
INFO  16:37:28,623 - #6 if
INFO  16:37:28,623 - #40 (
INFO  16:37:28,623 - #18 0
INFO  16:37:28,623 - #29 <=
INFO  16:37:28,623 - #17 x
INFO  16:37:28,623 - #32 &&
INFO  16:37:28,623 - #17 x
INFO  16:37:28,623 - #28 <
INFO  16:37:28,623 - #17 size
INFO  16:37:28,623 - #41 )
INFO  16:37:28,623 - #44 {
INFO  16:37:28,624 - #17 val
INFO  16:37:28,624 - #39 .
INFO  16:37:28,624 - #17 putp
INFO  16:37:28,624 - #40 (
INFO  16:37:28,624 - #17 val
INFO  16:37:28,624 - #39 .
INFO  16:37:28,624 - #17 getp
INFO  16:37:28,624 - #40 (
INFO  16:37:28,624 - #17 x
INFO  16:37:28,624 - #41 )
INFO  16:37:28,624 - #21 +
INFO  16:37:28,624 - #18 1
INFO  16:37:28,624 - #41 )
INFO  16:37:28,624 - #37 ;
INFO  16:37:28,624 - #45 }
INFO  16:37:28,624 - #5 else
INFO  16:37:28,624 - #6 if
INFO  16:37:28,624 - #40 (
INFO  16:37:28,625 - #17 size
INFO  16:37:28,625 - #28 <
INFO  16:37:28,625 - #17 x
INFO  16:37:28,625 - #32 &&
INFO  16:37:28,625 - #17 x
INFO  16:37:28,625 - #28 <
INFO  16:37:28,625 - #18 0
INFO  16:37:28,625 - #41 )
INFO  16:37:28,625 - #44 {
INFO  16:37:28,625 - #17 val
INFO  16:37:28,625 - #39 .
INFO  16:37:28,625 - #17 putn
INFO  16:37:28,625 - #40 (
INFO  16:37:28,625 - #17 val
INFO  16:37:28,625 - #39 .
INFO  16:37:28,625 - #17 getn
INFO  16:37:28,625 - #40 (
INFO  16:37:28,625 - #17 x
INFO  16:37:28,625 - #41 )
INFO  16:37:28,626 - #21 +
INFO  16:37:28,626 - #18 1
INFO  16:37:28,626 - #41 )
INFO  16:37:28,626 - #37 ;
INFO  16:37:28,626 - #45 }
INFO  16:37:28,626 - #9 read
INFO  16:37:28,626 - #40 (
INFO  16:37:28,626 - #17 x
INFO  16:37:28,626 - #41 )
INFO  16:37:28,626 - #37 ;
INFO  16:37:28,626 - #45 }
INFO  16:37:28,626 - #45 }
INFO  16:37:28,626 - #13 while
INFO  16:37:28,626 - #40 (
INFO  16:37:28,626 - #20 true
INFO  16:37:28,626 - #41 )
INFO  16:37:28,626 - #37 ;
INFO  16:37:28,626 - #45 }
