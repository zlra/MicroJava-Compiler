INFO  16:39:20,996 - Compiling source file: C:\Users\zlra\Desktop\Programski Prevodioci\Implementacija\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  16:39:21,001 - #2 program
INFO  16:39:21,002 - #17 P
INFO  16:39:21,002 - #16 const
INFO  16:39:21,002 - #17 int
INFO  16:39:21,002 - #17 size
INFO  16:39:21,002 - #34 =
INFO  16:39:21,002 - #18 10
INFO  16:39:21,002 - #37 ;
INFO  16:39:21,002 - #4 class
INFO  16:39:21,002 - #17 Table
INFO  16:39:21,002 - #44 {
INFO  16:39:21,002 - #17 int
INFO  16:39:21,002 - #17 pos
INFO  16:39:21,002 - #42 [
INFO  16:39:21,002 - #43 ]
INFO  16:39:21,002 - #38 ,
INFO  16:39:21,003 - #17 neg
INFO  16:39:21,003 - #42 [
INFO  16:39:21,003 - #43 ]
INFO  16:39:21,003 - #37 ;
INFO  16:39:21,003 - #44 {
INFO  16:39:21,003 - #11 void
INFO  16:39:21,003 - #17 putp
INFO  16:39:21,003 - #40 (
INFO  16:39:21,003 - #17 int
INFO  16:39:21,003 - #17 a
INFO  16:39:21,003 - #38 ,
INFO  16:39:21,003 - #17 int
INFO  16:39:21,003 - #17 idx
INFO  16:39:21,003 - #41 )
INFO  16:39:21,003 - #44 {
INFO  16:39:21,003 - #17 this
INFO  16:39:21,003 - #39 .
INFO  16:39:21,004 - #17 pos
INFO  16:39:21,004 - #42 [
INFO  16:39:21,004 - #17 idx
INFO  16:39:21,004 - #43 ]
INFO  16:39:21,004 - #34 =
INFO  16:39:21,004 - #17 a
INFO  16:39:21,004 - #37 ;
INFO  16:39:21,004 - #45 }
INFO  16:39:21,004 - #11 void
INFO  16:39:21,004 - #17 putn
INFO  16:39:21,004 - #40 (
INFO  16:39:21,004 - #17 int
INFO  16:39:21,004 - #17 a
INFO  16:39:21,004 - #38 ,
INFO  16:39:21,004 - #17 int
INFO  16:39:21,004 - #17 idx
INFO  16:39:21,005 - #41 )
INFO  16:39:21,005 - #44 {
INFO  16:39:21,005 - #17 this
INFO  16:39:21,005 - #39 .
INFO  16:39:21,005 - #17 neg
INFO  16:39:21,005 - #42 [
INFO  16:39:21,005 - #17 idx
INFO  16:39:21,005 - #43 ]
INFO  16:39:21,005 - #34 =
INFO  16:39:21,005 - #17 a
INFO  16:39:21,007 - #37 ;
INFO  16:39:21,007 - #45 }
INFO  16:39:21,007 - #17 int
INFO  16:39:21,007 - #17 getp
INFO  16:39:21,007 - #40 (
INFO  16:39:21,008 - #17 int
INFO  16:39:21,008 - #17 idx
INFO  16:39:21,008 - #41 )
INFO  16:39:21,008 - #44 {
INFO  16:39:21,008 - #10 return
INFO  16:39:21,008 - #17 pos
INFO  16:39:21,008 - #42 [
INFO  16:39:21,008 - #17 idx
INFO  16:39:21,008 - #43 ]
INFO  16:39:21,008 - #37 ;
INFO  16:39:21,008 - #45 }
INFO  16:39:21,008 - #17 int
INFO  16:39:21,008 - #17 getn
INFO  16:39:21,008 - #40 (
INFO  16:39:21,008 - #17 int
INFO  16:39:21,008 - #17 idx
INFO  16:39:21,008 - #41 )
INFO  16:39:21,008 - #44 {
INFO  16:39:21,008 - #10 return
INFO  16:39:21,008 - #17 neg
INFO  16:39:21,008 - #42 [
INFO  16:39:21,008 - #17 idx
INFO  16:39:21,009 - #43 ]
INFO  16:39:21,009 - #37 ;
INFO  16:39:21,009 - #45 }
INFO  16:39:21,009 - #45 }
INFO  16:39:21,009 - #45 }
INFO  16:39:21,009 - #17 Table
INFO  16:39:21,009 - #17 val
INFO  16:39:21,009 - #37 ;
INFO  16:39:21,009 - #44 {
INFO  16:39:21,009 - #11 void
INFO  16:39:21,009 - #17 main
INFO  16:39:21,009 - #40 (
INFO  16:39:21,009 - #41 )
INFO  16:39:21,009 - #17 int
INFO  16:39:21,009 - #17 x
INFO  16:39:21,009 - #38 ,
INFO  16:39:21,010 - #17 i
INFO  16:39:21,010 - #37 ;
INFO  16:39:21,010 - #44 {
INFO  16:39:21,010 - #17 val
INFO  16:39:21,010 - #34 =
INFO  16:39:21,010 - #7 new
INFO  16:39:21,010 - #17 Table
INFO  16:39:21,010 - #37 ;
INFO  16:39:21,010 - #17 val
INFO  16:39:21,010 - #39 .
INFO  16:39:21,010 - #17 pos
INFO  16:39:21,010 - #34 =
INFO  16:39:21,010 - #7 new
INFO  16:39:21,010 - #17 int
INFO  16:39:21,010 - #42 [
INFO  16:39:21,010 - #17 size
INFO  16:39:21,010 - #43 ]
INFO  16:39:21,010 - #37 ;
INFO  16:39:21,010 - #17 val
INFO  16:39:21,010 - #39 .
INFO  16:39:21,010 - #17 neg
INFO  16:39:21,010 - #34 =
INFO  16:39:21,011 - #7 new
INFO  16:39:21,011 - #17 int
INFO  16:39:21,011 - #42 [
INFO  16:39:21,011 - #17 size
INFO  16:39:21,011 - #43 ]
INFO  16:39:21,011 - #37 ;
INFO  16:39:21,011 - #17 i
INFO  16:39:21,011 - #34 =
INFO  16:39:21,011 - #18 0
INFO  16:39:21,011 - #37 ;
INFO  16:39:21,011 - #12 do
INFO  16:39:21,011 - #44 {
INFO  16:39:21,011 - #17 val
INFO  16:39:21,012 - #39 .
INFO  16:39:21,012 - #17 putp
INFO  16:39:21,012 - #40 (
INFO  16:39:21,012 - #18 0
INFO  16:39:21,012 - #38 ,
INFO  16:39:21,012 - #17 i
INFO  16:39:21,012 - #41 )
INFO  16:39:21,012 - #37 ;
INFO  16:39:21,012 - #17 val
INFO  16:39:21,012 - #39 .
INFO  16:39:21,012 - #17 putn
INFO  16:39:21,012 - #40 (
INFO  16:39:21,012 - #18 0
INFO  16:39:21,012 - #38 ,
INFO  16:39:21,012 - #17 i
INFO  16:39:21,012 - #41 )
INFO  16:39:21,012 - #37 ;
INFO  16:39:21,012 - #17 i
INFO  16:39:21,012 - #35 ++
INFO  16:39:21,012 - #37 ;
INFO  16:39:21,012 - #45 }
INFO  16:39:21,013 - #13 while
INFO  16:39:21,013 - #40 (
INFO  16:39:21,013 - #17 i
INFO  16:39:21,013 - #28 <
INFO  16:39:21,013 - #17 size
INFO  16:39:21,013 - #41 )
INFO  16:39:21,013 - #37 ;
INFO  16:39:21,013 - #9 read
INFO  16:39:21,013 - #40 (
INFO  16:39:21,013 - #17 x
INFO  16:39:21,013 - #41 )
INFO  16:39:21,013 - #37 ;
INFO  16:39:21,013 - #12 do
INFO  16:39:21,013 - #44 {
INFO  16:39:21,013 - #6 if
INFO  16:39:21,013 - #40 (
INFO  16:39:21,013 - #17 x
INFO  16:39:21,013 - #31 >=
INFO  16:39:21,013 - #17 size
INFO  16:39:21,013 - #41 )
INFO  16:39:21,013 - #3 break
INFO  16:39:21,013 - #37 ;
INFO  16:39:21,013 - #6 if
INFO  16:39:21,013 - #40 (
INFO  16:39:21,013 - #18 0
INFO  16:39:21,013 - #29 <=
INFO  16:39:21,013 - #17 x
INFO  16:39:21,014 - #32 &&
INFO  16:39:21,014 - #17 x
INFO  16:39:21,014 - #28 <
INFO  16:39:21,014 - #17 size
INFO  16:39:21,014 - #41 )
INFO  16:39:21,014 - #44 {
INFO  16:39:21,014 - #17 val
INFO  16:39:21,014 - #39 .
INFO  16:39:21,014 - #17 putp
INFO  16:39:21,014 - #40 (
INFO  16:39:21,014 - #17 val
INFO  16:39:21,014 - #39 .
INFO  16:39:21,014 - #17 getp
INFO  16:39:21,014 - #40 (
INFO  16:39:21,014 - #17 x
INFO  16:39:21,014 - #41 )
INFO  16:39:21,014 - #21 +
INFO  16:39:21,014 - #18 1
INFO  16:39:21,014 - #41 )
INFO  16:39:21,014 - #37 ;
INFO  16:39:21,014 - #45 }
INFO  16:39:21,014 - #5 else
INFO  16:39:21,014 - #6 if
INFO  16:39:21,014 - #40 (
INFO  16:39:21,014 - #17 size
INFO  16:39:21,015 - #28 <
INFO  16:39:21,015 - #17 x
INFO  16:39:21,015 - #32 &&
INFO  16:39:21,015 - #17 x
INFO  16:39:21,015 - #28 <
INFO  16:39:21,015 - #18 0
INFO  16:39:21,015 - #41 )
INFO  16:39:21,015 - #44 {
INFO  16:39:21,015 - #17 val
INFO  16:39:21,015 - #39 .
INFO  16:39:21,015 - #17 putn
INFO  16:39:21,015 - #40 (
INFO  16:39:21,015 - #17 val
INFO  16:39:21,015 - #39 .
INFO  16:39:21,015 - #17 getn
INFO  16:39:21,015 - #40 (
INFO  16:39:21,015 - #17 x
INFO  16:39:21,015 - #41 )
INFO  16:39:21,015 - #21 +
INFO  16:39:21,015 - #18 1
INFO  16:39:21,015 - #41 )
INFO  16:39:21,015 - #37 ;
INFO  16:39:21,015 - #45 }
INFO  16:39:21,015 - #9 read
INFO  16:39:21,015 - #40 (
INFO  16:39:21,015 - #17 x
INFO  16:39:21,015 - #41 )
INFO  16:39:21,015 - #37 ;
INFO  16:39:21,015 - #45 }
INFO  16:39:21,016 - #45 }
INFO  16:39:21,016 - #13 while
INFO  16:39:21,016 - #40 (
INFO  16:39:21,016 - #20 true
INFO  16:39:21,016 - #41 )
INFO  16:39:21,016 - #37 ;
INFO  16:39:21,016 - #45 }
