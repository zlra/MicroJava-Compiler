INFO  14:27:27,471 - Compiling source file: C:\Users\zlra\Desktop\Programski Prevodioci\Implementacija\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  14:27:27,540 - #2 program
INFO  14:27:27,540 - #45 P
INFO  14:27:27,540 - #16 const
INFO  14:27:27,541 - #45 int
INFO  14:27:27,541 - #45 size
INFO  14:27:27,542 - #30 =
INFO  14:27:27,542 - #42 10
INFO  14:27:27,542 - #33 ;
INFO  14:27:27,543 - #45 int
INFO  14:27:27,543 - #45 x
INFO  14:27:27,543 - #34 ,
INFO  14:27:27,545 - #45 abcd
INFO  14:27:27,545 - #34 ,
INFO  14:27:27,545 - #45 ok
INFO  14:27:27,545 - #34 ,
INFO  14:27:27,545 - #45 nijeok
INFO  14:27:27,545 - #34 ,
INFO  14:27:27,545 - #42 2
ERROR 14:27:27,545 - 
Sintaksna greska na liniji 3
INFO  14:27:27,546 - #17 +
INFO  14:27:27,546 - #42 5
INFO  14:27:27,546 - #34 ,
INFO  14:27:27,546 - #44 'c'
INFO  14:27:27,546 - #34 ,
INFO  14:27:27,547 - #45 i
INFO  14:27:27,547 - #33 ;
INFO  14:27:27,547 - #4 class
ERROR 14:27:27,547 - Greska pri definiciji globalne promenljive na liniji 4
INFO  14:27:27,548 - #45 Table
INFO  14:27:27,548 - #40 {
INFO  14:27:27,549 - #45 int
INFO  14:27:27,549 - #45 pos
INFO  14:27:27,550 - #38 [
INFO  14:27:27,550 - #39 ]
INFO  14:27:27,550 - #34 ,
INFO  14:27:27,550 - #45 neg
INFO  14:27:27,550 - #38 [
INFO  14:27:27,550 - #39 ]
INFO  14:27:27,550 - #33 ;
INFO  14:27:27,551 - #40 {
INFO  14:27:27,551 - #11 void
INFO  14:27:27,551 - #45 putp
INFO  14:27:27,552 - #36 (
INFO  14:27:27,552 - #45 int
INFO  14:27:27,552 - #45 a
INFO  14:27:27,553 - #34 ,
INFO  14:27:27,553 - #45 int
INFO  14:27:27,554 - #45 idx
INFO  14:27:27,554 - #37 )
INFO  14:27:27,554 - #40 {
INFO  14:27:27,554 - #45 this
INFO  14:27:27,555 - #35 .
INFO  14:27:27,555 - #45 pos
INFO  14:27:27,555 - #38 [
INFO  14:27:27,556 - #45 idx
INFO  14:27:27,557 - #39 ]
INFO  14:27:27,559 - #30 =
INFO  14:27:27,559 - #45 a
INFO  14:27:27,559 - #33 ;
INFO  14:27:27,561 - #41 }
INFO  14:27:27,562 - #11 void
INFO  14:27:27,563 - #45 putn
INFO  14:27:27,563 - #36 (
INFO  14:27:27,563 - #45 int
INFO  14:27:27,563 - #45 a
INFO  14:27:27,563 - #34 ,
INFO  14:27:27,563 - #45 int
INFO  14:27:27,563 - #45 idx
INFO  14:27:27,563 - #37 )
INFO  14:27:27,563 - #40 {
INFO  14:27:27,563 - #45 this
INFO  14:27:27,563 - #35 .
INFO  14:27:27,563 - #45 neg
INFO  14:27:27,563 - #38 [
INFO  14:27:27,564 - #45 idx
INFO  14:27:27,564 - #39 ]
INFO  14:27:27,564 - #30 =
INFO  14:27:27,564 - #45 a
INFO  14:27:27,564 - #33 ;
INFO  14:27:27,564 - #41 }
INFO  14:27:27,564 - #45 int
INFO  14:27:27,564 - #45 getp
INFO  14:27:27,564 - #36 (
INFO  14:27:27,564 - #45 int
INFO  14:27:27,564 - #45 idx
INFO  14:27:27,564 - #37 )
INFO  14:27:27,564 - #40 {
INFO  14:27:27,564 - #10 return
INFO  14:27:27,565 - #45 pos
INFO  14:27:27,565 - #38 [
INFO  14:27:27,565 - #45 idx
INFO  14:27:27,565 - #39 ]
INFO  14:27:27,565 - #33 ;
INFO  14:27:27,565 - #41 }
INFO  14:27:27,565 - #45 int
INFO  14:27:27,565 - #45 getn
INFO  14:27:27,565 - #36 (
INFO  14:27:27,565 - #45 int
INFO  14:27:27,565 - #45 idx
INFO  14:27:27,566 - #37 )
INFO  14:27:27,566 - #40 {
INFO  14:27:27,566 - #10 return
INFO  14:27:27,566 - #45 neg
INFO  14:27:27,566 - #38 [
INFO  14:27:27,566 - #45 idx
INFO  14:27:27,566 - #39 ]
INFO  14:27:27,566 - #33 ;
INFO  14:27:27,566 - #41 }
INFO  14:27:27,566 - #41 }
INFO  14:27:27,566 - #41 }
INFO  14:27:27,567 - #45 Table
INFO  14:27:27,568 - #45 val
INFO  14:27:27,568 - #33 ;
INFO  14:27:27,568 - #40 {
INFO  14:27:27,568 - #11 void
INFO  14:27:27,568 - #45 main
INFO  14:27:27,568 - #36 (
INFO  14:27:27,568 - #37 )
INFO  14:27:27,568 - #40 {
INFO  14:27:27,569 - #45 val
INFO  14:27:27,569 - #30 =
INFO  14:27:27,569 - #7 new
INFO  14:27:27,569 - #45 Table
INFO  14:27:27,569 - #33 ;
INFO  14:27:27,569 - #45 val
INFO  14:27:27,569 - #35 .
INFO  14:27:27,569 - #45 pos
INFO  14:27:27,569 - #30 =
INFO  14:27:27,569 - #7 new
INFO  14:27:27,569 - #45 int
INFO  14:27:27,569 - #38 [
INFO  14:27:27,569 - #45 size
INFO  14:27:27,569 - #39 ]
INFO  14:27:27,569 - #33 ;
INFO  14:27:27,570 - #45 val
INFO  14:27:27,570 - #35 .
INFO  14:27:27,570 - #45 neg
INFO  14:27:27,570 - #30 =
INFO  14:27:27,570 - #7 new
INFO  14:27:27,570 - #45 int
INFO  14:27:27,570 - #38 [
INFO  14:27:27,570 - #45 size
INFO  14:27:27,570 - #39 ]
INFO  14:27:27,570 - #33 ;
INFO  14:27:27,570 - #45 i
INFO  14:27:27,570 - #30 =
INFO  14:27:27,570 - #42 0
INFO  14:27:27,570 - #33 ;
INFO  14:27:27,570 - #12 do
INFO  14:27:27,570 - #40 {
INFO  14:27:27,570 - #45 val
INFO  14:27:27,570 - #35 .
INFO  14:27:27,570 - #45 putp
INFO  14:27:27,570 - #36 (
INFO  14:27:27,570 - #42 0
INFO  14:27:27,570 - #34 ,
INFO  14:27:27,571 - #45 i
INFO  14:27:27,571 - #37 )
INFO  14:27:27,571 - #33 ;
INFO  14:27:27,571 - #45 val
INFO  14:27:27,571 - #35 .
INFO  14:27:27,571 - #45 putn
INFO  14:27:27,571 - #36 (
INFO  14:27:27,571 - #42 0
INFO  14:27:27,571 - #34 ,
INFO  14:27:27,571 - #45 i
INFO  14:27:27,571 - #37 )
INFO  14:27:27,571 - #33 ;
INFO  14:27:27,571 - #45 i
INFO  14:27:27,571 - #31 ++
INFO  14:27:27,571 - #33 ;
INFO  14:27:27,571 - #41 }
INFO  14:27:27,571 - #13 while
INFO  14:27:27,572 - #36 (
INFO  14:27:27,572 - #45 i
INFO  14:27:27,572 - #22 <
INFO  14:27:27,572 - #45 size
INFO  14:27:27,572 - #37 )
INFO  14:27:27,574 - #33 ;
INFO  14:27:27,574 - #9 read
INFO  14:27:27,575 - #36 (
INFO  14:27:27,575 - #45 x
INFO  14:27:27,575 - #37 )
INFO  14:27:27,575 - #33 ;
INFO  14:27:27,575 - #12 do
INFO  14:27:27,576 - #40 {
INFO  14:27:27,576 - #6 if
INFO  14:27:27,576 - #36 (
INFO  14:27:27,576 - #45 x
INFO  14:27:27,576 - #25 >=
INFO  14:27:27,576 - #45 size
INFO  14:27:27,576 - #37 )
INFO  14:27:27,576 - #3 break
INFO  14:27:27,576 - #33 ;
INFO  14:27:27,577 - #6 if
INFO  14:27:27,578 - #36 (
INFO  14:27:27,578 - #42 0
INFO  14:27:27,578 - #23 <=
INFO  14:27:27,578 - #45 x
INFO  14:27:27,578 - #26 &&
INFO  14:27:27,579 - #45 x
INFO  14:27:27,579 - #22 <
INFO  14:27:27,579 - #45 size
INFO  14:27:27,579 - #37 )
INFO  14:27:27,579 - #40 {
INFO  14:27:27,579 - #45 val
INFO  14:27:27,579 - #35 .
INFO  14:27:27,579 - #45 putp
INFO  14:27:27,579 - #36 (
INFO  14:27:27,579 - #45 val
INFO  14:27:27,579 - #35 .
INFO  14:27:27,579 - #45 getp
INFO  14:27:27,579 - #36 (
INFO  14:27:27,579 - #45 x
INFO  14:27:27,579 - #37 )
INFO  14:27:27,579 - #17 +
INFO  14:27:27,579 - #42 1
INFO  14:27:27,580 - #37 )
INFO  14:27:27,580 - #33 ;
INFO  14:27:27,580 - #41 }
INFO  14:27:27,580 - #5 else
INFO  14:27:27,581 - #6 if
INFO  14:27:27,581 - #36 (
INFO  14:27:27,581 - #18 -
INFO  14:27:27,581 - #45 size
INFO  14:27:27,581 - #22 <
INFO  14:27:27,581 - #45 x
INFO  14:27:27,581 - #26 &&
INFO  14:27:27,581 - #45 x
INFO  14:27:27,581 - #22 <
INFO  14:27:27,581 - #42 0
INFO  14:27:27,581 - #37 )
INFO  14:27:27,581 - #40 {
INFO  14:27:27,581 - #45 val
INFO  14:27:27,581 - #35 .
INFO  14:27:27,581 - #45 putn
INFO  14:27:27,581 - #36 (
INFO  14:27:27,581 - #45 val
INFO  14:27:27,581 - #35 .
INFO  14:27:27,582 - #45 getn
INFO  14:27:27,582 - #36 (
INFO  14:27:27,582 - #18 -
INFO  14:27:27,582 - #45 x
INFO  14:27:27,582 - #37 )
INFO  14:27:27,582 - #17 +
INFO  14:27:27,582 - #42 1
INFO  14:27:27,582 - #37 )
INFO  14:27:27,582 - #33 ;
INFO  14:27:27,582 - #41 }
INFO  14:27:27,582 - #9 read
INFO  14:27:27,582 - #36 (
INFO  14:27:27,582 - #45 x
INFO  14:27:27,582 - #37 )
INFO  14:27:27,582 - #33 ;
INFO  14:27:27,582 - #41 }
INFO  14:27:27,582 - #13 while
INFO  14:27:27,582 - #36 (
INFO  14:27:27,582 - #43 true
INFO  14:27:27,582 - #37 )
INFO  14:27:27,583 - #33 ;
INFO  14:27:27,583 - #41 }
INFO  14:27:27,583 - #41 }
INFO  14:27:27,584 - Print calls = 262
