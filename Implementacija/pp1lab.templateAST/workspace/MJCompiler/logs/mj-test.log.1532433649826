INFO  10:51:44,716 - Compiling source file: C:\Users\zlra\Desktop\Programski Prevodioci\Implementacija\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  10:51:44,759 - #2 program
INFO  10:51:44,759 - #45 P
INFO  10:51:44,759 - #16 const
INFO  10:51:44,760 - #45 int
INFO  10:51:44,760 - #45 size
INFO  10:51:44,761 - #30 =
INFO  10:51:44,761 - #42 10
INFO  10:51:44,761 - #33 ;
INFO  10:51:44,762 - #45 int
INFO  10:51:44,762 - #45 x
INFO  10:51:44,762 - #34 ,
INFO  10:51:44,763 - #45 abcd
INFO  10:51:44,764 - #34 ,
INFO  10:51:44,764 - #45 ok
INFO  10:51:44,764 - #34 ,
INFO  10:51:44,764 - #45 nijeok
INFO  10:51:44,764 - #34 ,
INFO  10:51:44,764 - #42 2
ERROR 10:51:44,764 - 
Sintaksna greska na liniji 3
INFO  10:51:44,764 - #17 +
INFO  10:51:44,764 - #42 5
INFO  10:51:44,764 - #34 ,
INFO  10:51:44,765 - #44 'c'
INFO  10:51:44,765 - #34 ,
INFO  10:51:44,765 - #45 i
INFO  10:51:44,765 - #33 ;
INFO  10:51:44,765 - #4 class
ERROR 10:51:44,766 - Sintaksna greska pri deklaraciji globalne promenljive na liniji 
INFO  10:51:44,767 - #45 Table
INFO  10:51:44,767 - #40 {
INFO  10:51:44,767 - #45 int
INFO  10:51:44,768 - #45 pos
INFO  10:51:44,768 - #38 [
INFO  10:51:44,768 - #39 ]
INFO  10:51:44,768 - #34 ,
INFO  10:51:44,769 - #45 neg
INFO  10:51:44,769 - #38 [
INFO  10:51:44,769 - #39 ]
INFO  10:51:44,769 - #33 ;
INFO  10:51:44,769 - #40 {
INFO  10:51:44,769 - #11 void
INFO  10:51:44,770 - #45 putp
INFO  10:51:44,770 - #36 (
INFO  10:51:44,770 - #45 int
INFO  10:51:44,770 - #45 a
INFO  10:51:44,771 - #34 ,
INFO  10:51:44,772 - #45 int
INFO  10:51:44,772 - #45 idx
INFO  10:51:44,772 - #37 )
INFO  10:51:44,772 - #40 {
INFO  10:51:44,772 - #45 this
INFO  10:51:44,773 - #35 .
INFO  10:51:44,773 - #45 pos
INFO  10:51:44,774 - #38 [
INFO  10:51:44,774 - #45 idx
INFO  10:51:44,775 - #39 ]
INFO  10:51:44,777 - #30 =
INFO  10:51:44,777 - #45 a
INFO  10:51:44,777 - #33 ;
INFO  10:51:44,779 - #41 }
INFO  10:51:44,780 - #11 void
INFO  10:51:44,781 - #45 putn
INFO  10:51:44,781 - #36 (
INFO  10:51:44,781 - #45 int
INFO  10:51:44,781 - #45 a
INFO  10:51:44,781 - #34 ,
INFO  10:51:44,781 - #45 int
INFO  10:51:44,781 - #45 idx
INFO  10:51:44,781 - #37 )
INFO  10:51:44,781 - #40 {
INFO  10:51:44,781 - #45 this
INFO  10:51:44,781 - #35 .
INFO  10:51:44,781 - #45 neg
INFO  10:51:44,781 - #38 [
INFO  10:51:44,782 - #45 idx
INFO  10:51:44,782 - #39 ]
INFO  10:51:44,782 - #30 =
INFO  10:51:44,782 - #45 a
INFO  10:51:44,782 - #33 ;
INFO  10:51:44,782 - #41 }
INFO  10:51:44,782 - #45 int
INFO  10:51:44,782 - #45 getp
INFO  10:51:44,782 - #36 (
INFO  10:51:44,782 - #45 int
INFO  10:51:44,782 - #45 idx
INFO  10:51:44,782 - #37 )
INFO  10:51:44,782 - #40 {
INFO  10:51:44,782 - #10 return
INFO  10:51:44,783 - #45 pos
INFO  10:51:44,783 - #38 [
INFO  10:51:44,783 - #45 idx
INFO  10:51:44,783 - #39 ]
INFO  10:51:44,783 - #33 ;
INFO  10:51:44,783 - #41 }
INFO  10:51:44,783 - #45 int
INFO  10:51:44,783 - #45 getn
INFO  10:51:44,783 - #36 (
INFO  10:51:44,783 - #45 int
INFO  10:51:44,783 - #45 idx
INFO  10:51:44,783 - #37 )
INFO  10:51:44,783 - #40 {
INFO  10:51:44,783 - #10 return
INFO  10:51:44,784 - #45 neg
INFO  10:51:44,784 - #38 [
INFO  10:51:44,784 - #45 idx
INFO  10:51:44,784 - #39 ]
INFO  10:51:44,784 - #33 ;
INFO  10:51:44,784 - #41 }
INFO  10:51:44,784 - #41 }
INFO  10:51:44,784 - #41 }
INFO  10:51:44,785 - #45 Table
INFO  10:51:44,785 - #45 val
INFO  10:51:44,785 - #33 ;
INFO  10:51:44,785 - #40 {
INFO  10:51:44,786 - #11 void
INFO  10:51:44,786 - #45 main
INFO  10:51:44,786 - #36 (
INFO  10:51:44,786 - #37 )
INFO  10:51:44,786 - #40 {
INFO  10:51:44,786 - #45 val
INFO  10:51:44,786 - #30 =
INFO  10:51:44,787 - #7 new
INFO  10:51:44,787 - #45 Table
INFO  10:51:44,787 - #33 ;
INFO  10:51:44,787 - #45 val
INFO  10:51:44,787 - #35 .
INFO  10:51:44,787 - #45 pos
INFO  10:51:44,787 - #30 =
INFO  10:51:44,787 - #7 new
INFO  10:51:44,787 - #45 int
INFO  10:51:44,787 - #38 [
INFO  10:51:44,787 - #45 size
INFO  10:51:44,787 - #39 ]
INFO  10:51:44,787 - #33 ;
INFO  10:51:44,788 - #45 val
INFO  10:51:44,788 - #35 .
INFO  10:51:44,788 - #45 neg
INFO  10:51:44,788 - #30 =
INFO  10:51:44,788 - #7 new
INFO  10:51:44,788 - #45 int
INFO  10:51:44,788 - #38 [
INFO  10:51:44,788 - #45 size
INFO  10:51:44,788 - #39 ]
INFO  10:51:44,788 - #33 ;
INFO  10:51:44,788 - #45 i
INFO  10:51:44,788 - #30 =
INFO  10:51:44,788 - #42 0
INFO  10:51:44,788 - #33 ;
INFO  10:51:44,788 - #12 do
INFO  10:51:44,788 - #40 {
INFO  10:51:44,788 - #45 val
INFO  10:51:44,788 - #35 .
INFO  10:51:44,788 - #45 putp
INFO  10:51:44,788 - #36 (
INFO  10:51:44,788 - #42 0
INFO  10:51:44,788 - #34 ,
INFO  10:51:44,789 - #45 i
INFO  10:51:44,789 - #37 )
INFO  10:51:44,789 - #33 ;
INFO  10:51:44,789 - #45 val
INFO  10:51:44,789 - #35 .
INFO  10:51:44,789 - #45 putn
INFO  10:51:44,789 - #36 (
INFO  10:51:44,789 - #42 0
INFO  10:51:44,789 - #34 ,
INFO  10:51:44,789 - #45 i
INFO  10:51:44,789 - #37 )
INFO  10:51:44,789 - #33 ;
INFO  10:51:44,789 - #45 i
INFO  10:51:44,789 - #31 ++
INFO  10:51:44,789 - #33 ;
INFO  10:51:44,790 - #41 }
INFO  10:51:44,790 - #13 while
INFO  10:51:44,790 - #36 (
INFO  10:51:44,790 - #45 i
INFO  10:51:44,790 - #22 <
INFO  10:51:44,790 - #45 size
INFO  10:51:44,791 - #37 )
INFO  10:51:44,793 - #33 ;
INFO  10:51:44,793 - #9 read
INFO  10:51:44,794 - #36 (
INFO  10:51:44,794 - #45 x
INFO  10:51:44,794 - #37 )
INFO  10:51:44,794 - #33 ;
INFO  10:51:44,794 - #12 do
INFO  10:51:44,794 - #40 {
INFO  10:51:44,794 - #6 if
INFO  10:51:44,794 - #36 (
INFO  10:51:44,794 - #45 x
INFO  10:51:44,794 - #25 >=
INFO  10:51:44,794 - #45 size
INFO  10:51:44,795 - #37 )
INFO  10:51:44,795 - #3 break
INFO  10:51:44,795 - #33 ;
INFO  10:51:44,795 - #6 if
INFO  10:51:44,796 - #36 (
INFO  10:51:44,797 - #42 0
INFO  10:51:44,797 - #23 <=
INFO  10:51:44,797 - #45 x
INFO  10:51:44,797 - #26 &&
INFO  10:51:44,797 - #45 x
INFO  10:51:44,797 - #22 <
INFO  10:51:44,797 - #45 size
INFO  10:51:44,797 - #37 )
INFO  10:51:44,798 - #40 {
INFO  10:51:44,798 - #45 val
INFO  10:51:44,798 - #35 .
INFO  10:51:44,798 - #45 putp
INFO  10:51:44,798 - #36 (
INFO  10:51:44,798 - #45 val
INFO  10:51:44,798 - #35 .
INFO  10:51:44,798 - #45 getp
INFO  10:51:44,798 - #36 (
INFO  10:51:44,798 - #45 x
INFO  10:51:44,798 - #37 )
INFO  10:51:44,798 - #17 +
INFO  10:51:44,798 - #42 1
INFO  10:51:44,799 - #37 )
INFO  10:51:44,799 - #33 ;
INFO  10:51:44,799 - #41 }
INFO  10:51:44,799 - #5 else
INFO  10:51:44,799 - #6 if
INFO  10:51:44,799 - #36 (
INFO  10:51:44,799 - #18 -
INFO  10:51:44,799 - #45 size
INFO  10:51:44,800 - #22 <
INFO  10:51:44,800 - #45 x
INFO  10:51:44,800 - #26 &&
INFO  10:51:44,800 - #45 x
INFO  10:51:44,800 - #22 <
INFO  10:51:44,800 - #42 0
INFO  10:51:44,800 - #37 )
INFO  10:51:44,800 - #40 {
INFO  10:51:44,800 - #45 val
INFO  10:51:44,800 - #35 .
INFO  10:51:44,800 - #45 putn
INFO  10:51:44,800 - #36 (
INFO  10:51:44,800 - #45 val
INFO  10:51:44,800 - #35 .
INFO  10:51:44,800 - #45 getn
INFO  10:51:44,800 - #36 (
INFO  10:51:44,800 - #18 -
INFO  10:51:44,800 - #45 x
INFO  10:51:44,800 - #37 )
INFO  10:51:44,800 - #17 +
INFO  10:51:44,800 - #42 1
INFO  10:51:44,800 - #37 )
INFO  10:51:44,802 - #33 ;
INFO  10:51:44,802 - #41 }
INFO  10:51:44,802 - #9 read
INFO  10:51:44,802 - #36 (
INFO  10:51:44,802 - #45 x
INFO  10:51:44,802 - #37 )
INFO  10:51:44,802 - #33 ;
INFO  10:51:44,802 - #41 }
INFO  10:51:44,803 - #13 while
INFO  10:51:44,803 - #36 (
INFO  10:51:44,803 - #43 true
INFO  10:51:44,803 - #37 )
INFO  10:51:44,804 - #33 ;
INFO  10:51:44,804 - #41 }
INFO  10:51:44,804 - #41 }
INFO  10:51:44,804 - Print calls = 262
