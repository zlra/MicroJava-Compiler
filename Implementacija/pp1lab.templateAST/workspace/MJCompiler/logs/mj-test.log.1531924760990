INFO  16:38:32,681 - Compiling source file: C:\Users\zlra\Desktop\Programski Prevodioci\Implementacija\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  16:38:32,686 - #2 program
INFO  16:38:32,686 - #17 P
INFO  16:38:32,686 - #16 const
INFO  16:38:32,686 - #17 int
INFO  16:38:32,686 - #17 size
INFO  16:38:32,686 - #34 =
INFO  16:38:32,686 - #18 10
INFO  16:38:32,686 - #37 ;
INFO  16:38:32,686 - #4 class
INFO  16:38:32,686 - #17 Table
INFO  16:38:32,687 - #44 {
INFO  16:38:32,687 - #17 int
INFO  16:38:32,687 - #17 pos
INFO  16:38:32,687 - #42 [
INFO  16:38:32,687 - #43 ]
INFO  16:38:32,687 - #38 ,
INFO  16:38:32,687 - #17 neg
INFO  16:38:32,687 - #42 [
INFO  16:38:32,687 - #43 ]
INFO  16:38:32,687 - #37 ;
INFO  16:38:32,687 - #44 {
INFO  16:38:32,687 - #11 void
INFO  16:38:32,687 - #17 putp
INFO  16:38:32,688 - #40 (
INFO  16:38:32,688 - #17 int
INFO  16:38:32,688 - #17 a
INFO  16:38:32,688 - #38 ,
INFO  16:38:32,688 - #17 int
INFO  16:38:32,688 - #17 idx
INFO  16:38:32,688 - #41 )
INFO  16:38:32,688 - #44 {
INFO  16:38:32,688 - #17 this
INFO  16:38:32,688 - #39 .
INFO  16:38:32,688 - #17 pos
INFO  16:38:32,688 - #42 [
INFO  16:38:32,688 - #17 idx
INFO  16:38:32,688 - #43 ]
INFO  16:38:32,688 - #34 =
INFO  16:38:32,688 - #17 a
INFO  16:38:32,688 - #37 ;
INFO  16:38:32,688 - #45 }
INFO  16:38:32,688 - #11 void
INFO  16:38:32,688 - #17 putn
INFO  16:38:32,688 - #40 (
INFO  16:38:32,688 - #17 int
INFO  16:38:32,689 - #17 a
INFO  16:38:32,689 - #38 ,
INFO  16:38:32,689 - #17 int
INFO  16:38:32,689 - #17 idx
INFO  16:38:32,689 - #41 )
INFO  16:38:32,689 - #44 {
INFO  16:38:32,689 - #17 this
INFO  16:38:32,689 - #39 .
INFO  16:38:32,689 - #17 neg
INFO  16:38:32,689 - #42 [
INFO  16:38:32,689 - #17 idx
INFO  16:38:32,689 - #43 ]
INFO  16:38:32,689 - #34 =
INFO  16:38:32,689 - #17 a
INFO  16:38:32,689 - #37 ;
INFO  16:38:32,689 - #45 }
INFO  16:38:32,689 - #17 int
INFO  16:38:32,690 - #17 getp
INFO  16:38:32,690 - #40 (
INFO  16:38:32,690 - #17 int
INFO  16:38:32,690 - #17 idx
INFO  16:38:32,690 - #41 )
INFO  16:38:32,690 - #44 {
INFO  16:38:32,690 - #10 return
INFO  16:38:32,690 - #17 pos
INFO  16:38:32,690 - #42 [
INFO  16:38:32,690 - #17 idx
INFO  16:38:32,690 - #43 ]
INFO  16:38:32,690 - #37 ;
INFO  16:38:32,690 - #45 }
INFO  16:38:32,690 - #17 int
INFO  16:38:32,690 - #17 getn
INFO  16:38:32,690 - #40 (
INFO  16:38:32,690 - #17 int
INFO  16:38:32,690 - #17 idx
INFO  16:38:32,690 - #41 )
INFO  16:38:32,690 - #44 {
INFO  16:38:32,690 - #10 return
INFO  16:38:32,690 - #17 neg
INFO  16:38:32,691 - #42 [
INFO  16:38:32,691 - #17 idx
INFO  16:38:32,691 - #43 ]
INFO  16:38:32,691 - #37 ;
INFO  16:38:32,691 - #45 }
INFO  16:38:32,691 - #45 }
INFO  16:38:32,691 - #45 }
INFO  16:38:32,691 - #17 Table
INFO  16:38:32,691 - #17 val
INFO  16:38:32,691 - #37 ;
INFO  16:38:32,691 - #44 {
INFO  16:38:32,691 - #11 void
INFO  16:38:32,691 - #17 main
INFO  16:38:32,691 - #40 (
INFO  16:38:32,691 - #41 )
INFO  16:38:32,691 - #17 int
INFO  16:38:32,691 - #17 x
INFO  16:38:32,691 - #38 ,
INFO  16:38:32,691 - #17 i
INFO  16:38:32,691 - #37 ;
INFO  16:38:32,691 - #44 {
INFO  16:38:32,691 - #17 val
INFO  16:38:32,691 - #34 =
INFO  16:38:32,691 - #7 new
INFO  16:38:32,692 - #17 Table
INFO  16:38:32,692 - #37 ;
INFO  16:38:32,692 - #17 val
INFO  16:38:32,692 - #39 .
INFO  16:38:32,692 - #17 pos
INFO  16:38:32,692 - #34 =
INFO  16:38:32,692 - #7 new
INFO  16:38:32,692 - #17 int
INFO  16:38:32,692 - #42 [
INFO  16:38:32,692 - #17 size
INFO  16:38:32,692 - #43 ]
INFO  16:38:32,692 - #37 ;
INFO  16:38:32,692 - #17 val
INFO  16:38:32,692 - #39 .
INFO  16:38:32,692 - #17 neg
INFO  16:38:32,692 - #34 =
INFO  16:38:32,692 - #7 new
INFO  16:38:32,692 - #17 int
INFO  16:38:32,692 - #42 [
INFO  16:38:32,692 - #17 size
INFO  16:38:32,692 - #43 ]
INFO  16:38:32,692 - #37 ;
INFO  16:38:32,692 - #17 i
INFO  16:38:32,692 - #34 =
INFO  16:38:32,693 - #18 0
INFO  16:38:32,693 - #37 ;
INFO  16:38:32,693 - #12 do
INFO  16:38:32,693 - #44 {
INFO  16:38:32,693 - #17 val
INFO  16:38:32,693 - #39 .
INFO  16:38:32,693 - #17 putp
INFO  16:38:32,693 - #40 (
INFO  16:38:32,693 - #18 0
INFO  16:38:32,693 - #38 ,
INFO  16:38:32,693 - #17 i
INFO  16:38:32,693 - #41 )
INFO  16:38:32,693 - #37 ;
INFO  16:38:32,693 - #17 val
INFO  16:38:32,693 - #39 .
INFO  16:38:32,693 - #17 putn
INFO  16:38:32,693 - #40 (
INFO  16:38:32,693 - #18 0
INFO  16:38:32,693 - #38 ,
INFO  16:38:32,693 - #17 i
INFO  16:38:32,693 - #41 )
INFO  16:38:32,693 - #37 ;
INFO  16:38:32,693 - #17 i
INFO  16:38:32,693 - #35 ++
INFO  16:38:32,693 - #37 ;
INFO  16:38:32,693 - #45 }
INFO  16:38:32,693 - #13 while
INFO  16:38:32,694 - #40 (
INFO  16:38:32,694 - #17 i
INFO  16:38:32,694 - #28 <
INFO  16:38:32,694 - #17 size
INFO  16:38:32,694 - #41 )
INFO  16:38:32,694 - #37 ;
INFO  16:38:32,694 - #9 read
INFO  16:38:32,694 - #40 (
INFO  16:38:32,694 - #17 x
INFO  16:38:32,694 - #41 )
INFO  16:38:32,694 - #37 ;
INFO  16:38:32,694 - #12 do
INFO  16:38:32,694 - #44 {
INFO  16:38:32,694 - #6 if
INFO  16:38:32,694 - #40 (
INFO  16:38:32,694 - #17 x
INFO  16:38:32,694 - #31 >=
INFO  16:38:32,694 - #17 size
INFO  16:38:32,694 - #41 )
INFO  16:38:32,694 - #3 break
INFO  16:38:32,694 - #37 ;
INFO  16:38:32,694 - #6 if
INFO  16:38:32,694 - #40 (
INFO  16:38:32,694 - #18 0
INFO  16:38:32,694 - #29 <=
INFO  16:38:32,694 - #17 x
INFO  16:38:32,695 - #32 &&
INFO  16:38:32,695 - #17 x
INFO  16:38:32,696 - #28 <
INFO  16:38:32,696 - #17 size
INFO  16:38:32,696 - #41 )
INFO  16:38:32,696 - #44 {
INFO  16:38:32,696 - #17 val
INFO  16:38:32,696 - #39 .
INFO  16:38:32,697 - #17 putp
INFO  16:38:32,697 - #40 (
INFO  16:38:32,697 - #17 val
INFO  16:38:32,697 - #39 .
INFO  16:38:32,697 - #17 getp
INFO  16:38:32,697 - #40 (
INFO  16:38:32,697 - #17 x
INFO  16:38:32,697 - #41 )
INFO  16:38:32,697 - #21 +
INFO  16:38:32,697 - #18 1
INFO  16:38:32,697 - #41 )
INFO  16:38:32,697 - #37 ;
INFO  16:38:32,697 - #45 }
INFO  16:38:32,697 - #5 else
INFO  16:38:32,697 - #6 if
INFO  16:38:32,697 - #40 (
INFO  16:38:32,698 - #17 size
INFO  16:38:32,698 - #28 <
INFO  16:38:32,698 - #17 x
INFO  16:38:32,698 - #32 &&
INFO  16:38:32,698 - #17 x
INFO  16:38:32,698 - #28 <
INFO  16:38:32,698 - #18 0
INFO  16:38:32,698 - #41 )
INFO  16:38:32,698 - #44 {
INFO  16:38:32,698 - #17 val
INFO  16:38:32,698 - #39 .
INFO  16:38:32,698 - #17 putn
INFO  16:38:32,698 - #40 (
INFO  16:38:32,698 - #17 val
INFO  16:38:32,698 - #39 .
INFO  16:38:32,698 - #17 getn
INFO  16:38:32,698 - #40 (
INFO  16:38:32,698 - #17 x
INFO  16:38:32,698 - #41 )
INFO  16:38:32,698 - #21 +
INFO  16:38:32,698 - #18 1
INFO  16:38:32,698 - #41 )
INFO  16:38:32,698 - #37 ;
INFO  16:38:32,698 - #45 }
INFO  16:38:32,698 - #9 read
INFO  16:38:32,699 - #40 (
INFO  16:38:32,699 - #17 x
INFO  16:38:32,699 - #41 )
INFO  16:38:32,699 - #37 ;
INFO  16:38:32,699 - #45 }
INFO  16:38:32,699 - #45 }
INFO  16:38:32,699 - #13 while
INFO  16:38:32,699 - #40 (
INFO  16:38:32,699 - #20 true
INFO  16:38:32,699 - #41 )
INFO  16:38:32,699 - #37 ;
INFO  16:38:32,699 - #45 }
