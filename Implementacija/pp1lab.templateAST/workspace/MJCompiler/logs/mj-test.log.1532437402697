INFO  15:02:42,245 - Compiling source file: C:\Users\zlra\Desktop\Programski Prevodioci\Implementacija\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  15:02:42,297 - #2 program
INFO  15:02:42,297 - #45 P
INFO  15:02:42,297 - #16 const
INFO  15:02:42,299 - #45 int
INFO  15:02:42,299 - #45 size
INFO  15:02:42,300 - #30 =
INFO  15:02:42,301 - #42 10
INFO  15:02:42,301 - #33 ;
INFO  15:02:42,301 - #45 int
INFO  15:02:42,302 - #45 x
INFO  15:02:42,302 - #34 ,
INFO  15:02:42,303 - #45 abcd
INFO  15:02:42,304 - #34 ,
INFO  15:02:42,304 - #45 ok
INFO  15:02:42,304 - #34 ,
INFO  15:02:42,304 - #45 nijeok
INFO  15:02:42,304 - #34 ,
INFO  15:02:42,304 - #42 2
ERROR 15:02:42,304 - 
Sintaksna greska na liniji 3
INFO  15:02:42,304 - #17 +
INFO  15:02:42,305 - #42 5
INFO  15:02:42,305 - #34 ,
INFO  15:02:42,305 - #44 'c'
INFO  15:02:42,305 - #34 ,
INFO  15:02:42,305 - #45 i
INFO  15:02:42,305 - #33 ;
INFO  15:02:42,306 - #4 class
ERROR 15:02:42,306 - Greska pri definiciji globalne promenljive na liniji 3
INFO  15:02:42,307 - #45 Table
INFO  15:02:42,307 - #40 {
INFO  15:02:42,308 - #45 int
INFO  15:02:42,309 - #45 pos
INFO  15:02:42,309 - #38 [
INFO  15:02:42,309 - #39 ]
INFO  15:02:42,309 - #34 ,
INFO  15:02:42,310 - #45 neg
INFO  15:02:42,310 - #38 [
INFO  15:02:42,310 - #39 ]
INFO  15:02:42,310 - #33 ;
INFO  15:02:42,310 - #40 {
INFO  15:02:42,310 - #11 void
INFO  15:02:42,311 - #45 putp
INFO  15:02:42,312 - #36 (
INFO  15:02:42,312 - #45 int
INFO  15:02:42,312 - #45 a
INFO  15:02:42,312 - #34 ,
INFO  15:02:42,313 - #45 int
INFO  15:02:42,313 - #45 idx
INFO  15:02:42,313 - #37 )
INFO  15:02:42,314 - #40 {
INFO  15:02:42,314 - #45 this
INFO  15:02:42,315 - #35 .
INFO  15:02:42,316 - #45 pos
INFO  15:02:42,316 - #38 [
INFO  15:02:42,316 - #45 idx
INFO  15:02:42,317 - #39 ]
INFO  15:02:42,320 - #30 =
INFO  15:02:42,320 - #45 a
INFO  15:02:42,320 - #33 ;
INFO  15:02:42,323 - #41 }
INFO  15:02:42,323 - #11 void
INFO  15:02:42,324 - #45 putn
INFO  15:02:42,324 - #36 (
INFO  15:02:42,324 - #45 int
INFO  15:02:42,324 - #45 a
INFO  15:02:42,324 - #34 ,
INFO  15:02:42,324 - #45 int
INFO  15:02:42,324 - #45 idx
INFO  15:02:42,324 - #37 )
INFO  15:02:42,324 - #40 {
INFO  15:02:42,324 - #45 this
INFO  15:02:42,324 - #35 .
INFO  15:02:42,324 - #45 neg
INFO  15:02:42,324 - #38 [
INFO  15:02:42,325 - #45 idx
INFO  15:02:42,325 - #39 ]
INFO  15:02:42,325 - #30 =
INFO  15:02:42,325 - #45 a
INFO  15:02:42,325 - #33 ;
INFO  15:02:42,325 - #41 }
INFO  15:02:42,325 - #45 int
INFO  15:02:42,325 - #45 getp
INFO  15:02:42,325 - #36 (
INFO  15:02:42,325 - #45 int
INFO  15:02:42,326 - #45 idx
INFO  15:02:42,326 - #37 )
INFO  15:02:42,326 - #40 {
INFO  15:02:42,326 - #10 return
INFO  15:02:42,326 - #45 pos
INFO  15:02:42,326 - #38 [
INFO  15:02:42,326 - #45 idx
INFO  15:02:42,326 - #39 ]
INFO  15:02:42,326 - #33 ;
INFO  15:02:42,326 - #41 }
INFO  15:02:42,326 - #45 int
INFO  15:02:42,327 - #45 getn
INFO  15:02:42,327 - #36 (
INFO  15:02:42,327 - #45 int
INFO  15:02:42,327 - #45 idx
INFO  15:02:42,327 - #37 )
INFO  15:02:42,327 - #40 {
INFO  15:02:42,327 - #10 return
INFO  15:02:42,327 - #45 neg
INFO  15:02:42,327 - #38 [
INFO  15:02:42,327 - #45 idx
INFO  15:02:42,327 - #39 ]
INFO  15:02:42,327 - #33 ;
INFO  15:02:42,327 - #41 }
INFO  15:02:42,327 - #41 }
INFO  15:02:42,327 - #41 }
INFO  15:02:42,328 - #45 Table
INFO  15:02:42,329 - #45 val
INFO  15:02:42,329 - #33 ;
INFO  15:02:42,329 - #40 {
INFO  15:02:42,329 - #11 void
INFO  15:02:42,329 - #45 main
INFO  15:02:42,329 - #36 (
INFO  15:02:42,329 - #37 )
INFO  15:02:42,330 - #40 {
INFO  15:02:42,330 - #45 val
INFO  15:02:42,330 - #30 =
INFO  15:02:42,330 - #7 new
INFO  15:02:42,330 - #45 Table
INFO  15:02:42,330 - #33 ;
INFO  15:02:42,330 - #45 val
INFO  15:02:42,330 - #35 .
INFO  15:02:42,330 - #45 pos
INFO  15:02:42,331 - #30 =
INFO  15:02:42,331 - #7 new
INFO  15:02:42,331 - #45 int
INFO  15:02:42,331 - #38 [
INFO  15:02:42,331 - #45 size
INFO  15:02:42,331 - #39 ]
INFO  15:02:42,331 - #33 ;
INFO  15:02:42,331 - #45 val
INFO  15:02:42,331 - #35 .
INFO  15:02:42,331 - #45 neg
INFO  15:02:42,331 - #30 =
INFO  15:02:42,332 - #7 new
INFO  15:02:42,332 - #45 int
INFO  15:02:42,332 - #38 [
INFO  15:02:42,332 - #45 size
INFO  15:02:42,332 - #39 ]
INFO  15:02:42,332 - #33 ;
INFO  15:02:42,332 - #45 i
INFO  15:02:42,332 - #30 =
INFO  15:02:42,332 - #42 0
INFO  15:02:42,332 - #33 ;
INFO  15:02:42,332 - #12 do
INFO  15:02:42,332 - #40 {
INFO  15:02:42,332 - #45 val
INFO  15:02:42,332 - #35 .
INFO  15:02:42,333 - #45 putp
INFO  15:02:42,333 - #36 (
INFO  15:02:42,333 - #42 0
INFO  15:02:42,333 - #34 ,
INFO  15:02:42,333 - #45 i
INFO  15:02:42,333 - #37 )
INFO  15:02:42,333 - #33 ;
INFO  15:02:42,333 - #45 val
INFO  15:02:42,333 - #35 .
INFO  15:02:42,334 - #45 putn
INFO  15:02:42,334 - #36 (
INFO  15:02:42,334 - #42 0
INFO  15:02:42,334 - #34 ,
INFO  15:02:42,334 - #45 i
INFO  15:02:42,334 - #37 )
INFO  15:02:42,334 - #33 ;
INFO  15:02:42,334 - #45 i
INFO  15:02:42,334 - #31 ++
INFO  15:02:42,334 - #33 ;
INFO  15:02:42,334 - #41 }
INFO  15:02:42,334 - #13 while
INFO  15:02:42,334 - #36 (
INFO  15:02:42,334 - #45 i
INFO  15:02:42,335 - #22 <
INFO  15:02:42,335 - #45 size
INFO  15:02:42,336 - #37 )
INFO  15:02:42,339 - #33 ;
INFO  15:02:42,339 - #9 read
INFO  15:02:42,340 - #36 (
INFO  15:02:42,340 - #45 x
INFO  15:02:42,340 - #37 )
INFO  15:02:42,340 - #33 ;
INFO  15:02:42,340 - #12 do
INFO  15:02:42,341 - #40 {
INFO  15:02:42,341 - #6 if
INFO  15:02:42,341 - #36 (
INFO  15:02:42,341 - #45 x
INFO  15:02:42,341 - #25 >=
INFO  15:02:42,341 - #45 size
INFO  15:02:42,341 - #37 )
INFO  15:02:42,341 - #3 break
INFO  15:02:42,341 - #33 ;
INFO  15:02:42,341 - #6 if
INFO  15:02:42,343 - #36 (
INFO  15:02:42,343 - #42 0
INFO  15:02:42,343 - #23 <=
INFO  15:02:42,343 - #45 x
INFO  15:02:42,344 - #26 &&
INFO  15:02:42,344 - #45 x
INFO  15:02:42,344 - #22 <
INFO  15:02:42,344 - #45 size
INFO  15:02:42,344 - #37 )
INFO  15:02:42,344 - #40 {
INFO  15:02:42,344 - #45 val
INFO  15:02:42,344 - #35 .
INFO  15:02:42,344 - #45 putp
INFO  15:02:42,344 - #36 (
INFO  15:02:42,344 - #45 val
INFO  15:02:42,344 - #35 .
INFO  15:02:42,344 - #45 getp
INFO  15:02:42,344 - #36 (
INFO  15:02:42,344 - #45 x
INFO  15:02:42,345 - #37 )
INFO  15:02:42,345 - #17 +
INFO  15:02:42,345 - #42 1
INFO  15:02:42,346 - #37 )
INFO  15:02:42,346 - #33 ;
INFO  15:02:42,346 - #41 }
INFO  15:02:42,346 - #5 else
INFO  15:02:42,346 - #6 if
INFO  15:02:42,346 - #36 (
INFO  15:02:42,346 - #18 -
INFO  15:02:42,346 - #45 size
INFO  15:02:42,347 - #22 <
INFO  15:02:42,347 - #45 x
INFO  15:02:42,347 - #26 &&
INFO  15:02:42,347 - #45 x
INFO  15:02:42,347 - #22 <
INFO  15:02:42,347 - #42 0
INFO  15:02:42,347 - #37 )
INFO  15:02:42,347 - #40 {
INFO  15:02:42,347 - #45 val
INFO  15:02:42,347 - #35 .
INFO  15:02:42,347 - #45 putn
INFO  15:02:42,347 - #36 (
INFO  15:02:42,347 - #45 val
INFO  15:02:42,347 - #35 .
INFO  15:02:42,347 - #45 getn
INFO  15:02:42,347 - #36 (
INFO  15:02:42,347 - #18 -
INFO  15:02:42,347 - #45 x
INFO  15:02:42,348 - #37 )
INFO  15:02:42,348 - #17 +
INFO  15:02:42,348 - #42 1
INFO  15:02:42,348 - #37 )
INFO  15:02:42,348 - #33 ;
INFO  15:02:42,348 - #41 }
INFO  15:02:42,348 - #9 read
INFO  15:02:42,348 - #36 (
INFO  15:02:42,348 - #45 x
INFO  15:02:42,348 - #37 )
INFO  15:02:42,348 - #33 ;
INFO  15:02:42,348 - #41 }
INFO  15:02:42,348 - #13 while
INFO  15:02:42,348 - #36 (
INFO  15:02:42,348 - #43 true
INFO  15:02:42,348 - #37 )
INFO  15:02:42,349 - #33 ;
INFO  15:02:42,349 - #41 }
INFO  15:02:42,350 - #41 }
INFO  15:02:42,351 - Print calls = 262
