INFO  14:01:11,280 - Compiling source file: C:\Users\zlra\Desktop\Programski Prevodioci\Implementacija\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  14:01:11,312 - #2 program
INFO  14:01:11,313 - #45 P
INFO  14:01:11,313 - #16 const
INFO  14:01:11,313 - #45 int
INFO  14:01:11,314 - #45 size
INFO  14:01:11,314 - #30 =
INFO  14:01:11,314 - #42 10
INFO  14:01:11,314 - #33 ;
INFO  14:01:11,315 - #45 int
INFO  14:01:11,315 - #45 x
INFO  14:01:11,315 - #34 ,
INFO  14:01:11,316 - #45 abcd
INFO  14:01:11,316 - #34 ,
INFO  14:01:11,316 - #45 ok
INFO  14:01:11,316 - #34 ,
INFO  14:01:11,316 - #45 nijeok
INFO  14:01:11,316 - #34 ,
INFO  14:01:11,316 - #42 2
ERROR 14:01:11,317 - 
Sintaksna greska na liniji 3
INFO  14:01:11,325 - #17 +
INFO  14:01:11,325 - #42 5
INFO  14:01:11,325 - #34 ,
INFO  14:01:11,325 - #44 'c'
INFO  14:01:11,325 - #34 ,
INFO  14:01:11,325 - #45 i
INFO  14:01:11,326 - #33 ;
INFO  14:01:11,326 - #4 class
ERROR 14:01:11,326 - Sintaksna greska pri deklaraciji globalne promenljive na liniji 
INFO  14:01:11,327 - #45 Table
INFO  14:01:11,327 - #40 {
INFO  14:01:11,327 - #45 int
INFO  14:01:11,327 - #45 pos
INFO  14:01:11,327 - #38 [
INFO  14:01:11,327 - #39 ]
INFO  14:01:11,327 - #34 ,
INFO  14:01:11,328 - #45 neg
INFO  14:01:11,328 - #38 [
INFO  14:01:11,328 - #39 ]
INFO  14:01:11,328 - #33 ;
INFO  14:01:11,328 - #40 {
INFO  14:01:11,328 - #11 void
INFO  14:01:11,329 - #45 putp
INFO  14:01:11,329 - #36 (
INFO  14:01:11,329 - #45 int
INFO  14:01:11,329 - #45 a
INFO  14:01:11,329 - #34 ,
INFO  14:01:11,330 - #45 int
INFO  14:01:11,330 - #45 idx
INFO  14:01:11,330 - #37 )
INFO  14:01:11,330 - #40 {
INFO  14:01:11,330 - #45 this
INFO  14:01:11,330 - #35 .
INFO  14:01:11,331 - #45 pos
INFO  14:01:11,331 - #38 [
INFO  14:01:11,331 - #45 idx
INFO  14:01:11,332 - #39 ]
INFO  14:01:11,333 - #30 =
INFO  14:01:11,333 - #45 a
INFO  14:01:11,333 - #33 ;
INFO  14:01:11,335 - #41 }
INFO  14:01:11,335 - #11 void
INFO  14:01:11,336 - #45 putn
INFO  14:01:11,336 - #36 (
INFO  14:01:11,336 - #45 int
INFO  14:01:11,336 - #45 a
INFO  14:01:11,336 - #34 ,
INFO  14:01:11,336 - #45 int
INFO  14:01:11,336 - #45 idx
INFO  14:01:11,336 - #37 )
INFO  14:01:11,336 - #40 {
INFO  14:01:11,336 - #45 this
INFO  14:01:11,336 - #35 .
INFO  14:01:11,336 - #45 neg
INFO  14:01:11,336 - #38 [
INFO  14:01:11,336 - #45 idx
INFO  14:01:11,337 - #39 ]
INFO  14:01:11,337 - #30 =
INFO  14:01:11,337 - #45 a
INFO  14:01:11,337 - #33 ;
INFO  14:01:11,337 - #41 }
INFO  14:01:11,337 - #45 int
INFO  14:01:11,337 - #45 getp
INFO  14:01:11,337 - #36 (
INFO  14:01:11,337 - #45 int
INFO  14:01:11,337 - #45 idx
INFO  14:01:11,337 - #37 )
INFO  14:01:11,337 - #40 {
INFO  14:01:11,337 - #10 return
INFO  14:01:11,337 - #45 pos
INFO  14:01:11,337 - #38 [
INFO  14:01:11,338 - #45 idx
INFO  14:01:11,338 - #39 ]
INFO  14:01:11,338 - #33 ;
INFO  14:01:11,338 - #41 }
INFO  14:01:11,338 - #45 int
INFO  14:01:11,338 - #45 getn
INFO  14:01:11,338 - #36 (
INFO  14:01:11,338 - #45 int
INFO  14:01:11,338 - #45 idx
INFO  14:01:11,338 - #37 )
INFO  14:01:11,338 - #40 {
INFO  14:01:11,338 - #10 return
INFO  14:01:11,338 - #45 neg
INFO  14:01:11,338 - #38 [
INFO  14:01:11,338 - #45 idx
INFO  14:01:11,339 - #39 ]
INFO  14:01:11,339 - #33 ;
INFO  14:01:11,339 - #41 }
INFO  14:01:11,339 - #41 }
INFO  14:01:11,339 - #41 }
INFO  14:01:11,339 - #45 Table
INFO  14:01:11,340 - #45 val
INFO  14:01:11,340 - #33 ;
INFO  14:01:11,340 - #40 {
INFO  14:01:11,340 - #11 void
INFO  14:01:11,340 - #45 main
INFO  14:01:11,340 - #36 (
INFO  14:01:11,340 - #37 )
INFO  14:01:11,341 - #40 {
INFO  14:01:11,341 - #45 val
INFO  14:01:11,341 - #30 =
INFO  14:01:11,341 - #7 new
INFO  14:01:11,341 - #45 Table
INFO  14:01:11,341 - #33 ;
INFO  14:01:11,341 - #45 val
INFO  14:01:11,341 - #35 .
INFO  14:01:11,341 - #45 pos
INFO  14:01:11,341 - #30 =
INFO  14:01:11,341 - #7 new
INFO  14:01:11,341 - #45 int
INFO  14:01:11,341 - #38 [
INFO  14:01:11,341 - #45 size
INFO  14:01:11,341 - #39 ]
INFO  14:01:11,341 - #33 ;
INFO  14:01:11,341 - #45 val
INFO  14:01:11,341 - #35 .
INFO  14:01:11,341 - #45 neg
INFO  14:01:11,341 - #30 =
INFO  14:01:11,341 - #7 new
INFO  14:01:11,341 - #45 int
INFO  14:01:11,342 - #38 [
INFO  14:01:11,342 - #45 size
INFO  14:01:11,342 - #39 ]
INFO  14:01:11,342 - #33 ;
INFO  14:01:11,342 - #45 i
INFO  14:01:11,342 - #30 =
INFO  14:01:11,342 - #42 0
INFO  14:01:11,342 - #33 ;
INFO  14:01:11,342 - #12 do
INFO  14:01:11,342 - #40 {
INFO  14:01:11,342 - #45 val
INFO  14:01:11,342 - #35 .
INFO  14:01:11,342 - #45 putp
INFO  14:01:11,342 - #36 (
INFO  14:01:11,342 - #42 0
INFO  14:01:11,342 - #34 ,
INFO  14:01:11,342 - #45 i
INFO  14:01:11,342 - #37 )
INFO  14:01:11,343 - #33 ;
INFO  14:01:11,343 - #45 val
INFO  14:01:11,343 - #35 .
INFO  14:01:11,343 - #45 putn
INFO  14:01:11,343 - #36 (
INFO  14:01:11,343 - #42 0
INFO  14:01:11,343 - #34 ,
INFO  14:01:11,343 - #45 i
INFO  14:01:11,343 - #37 )
INFO  14:01:11,343 - #33 ;
INFO  14:01:11,343 - #45 i
INFO  14:01:11,343 - #31 ++
INFO  14:01:11,343 - #33 ;
INFO  14:01:11,343 - #41 }
INFO  14:01:11,343 - #13 while
INFO  14:01:11,343 - #36 (
INFO  14:01:11,343 - #45 i
INFO  14:01:11,343 - #22 <
INFO  14:01:11,343 - #45 size
INFO  14:01:11,344 - #37 )
INFO  14:01:11,346 - #33 ;
INFO  14:01:11,346 - #9 read
INFO  14:01:11,346 - #36 (
INFO  14:01:11,346 - #45 x
INFO  14:01:11,346 - #37 )
INFO  14:01:11,346 - #33 ;
INFO  14:01:11,346 - #12 do
INFO  14:01:11,347 - #40 {
INFO  14:01:11,347 - #6 if
INFO  14:01:11,347 - #36 (
INFO  14:01:11,347 - #45 x
INFO  14:01:11,347 - #25 >=
INFO  14:01:11,347 - #45 size
INFO  14:01:11,347 - #37 )
INFO  14:01:11,347 - #3 break
INFO  14:01:11,347 - #33 ;
INFO  14:01:11,347 - #6 if
INFO  14:01:11,348 - #36 (
INFO  14:01:11,348 - #42 0
INFO  14:01:11,348 - #23 <=
INFO  14:01:11,348 - #45 x
INFO  14:01:11,349 - #26 &&
INFO  14:01:11,349 - #45 x
INFO  14:01:11,349 - #22 <
INFO  14:01:11,349 - #45 size
INFO  14:01:11,349 - #37 )
INFO  14:01:11,349 - #40 {
INFO  14:01:11,349 - #45 val
INFO  14:01:11,349 - #35 .
INFO  14:01:11,349 - #45 putp
INFO  14:01:11,349 - #36 (
INFO  14:01:11,349 - #45 val
INFO  14:01:11,349 - #35 .
INFO  14:01:11,349 - #45 getp
INFO  14:01:11,349 - #36 (
INFO  14:01:11,349 - #45 x
INFO  14:01:11,349 - #37 )
INFO  14:01:11,349 - #17 +
INFO  14:01:11,349 - #42 1
INFO  14:01:11,350 - #37 )
INFO  14:01:11,350 - #33 ;
INFO  14:01:11,350 - #41 }
INFO  14:01:11,350 - #5 else
INFO  14:01:11,350 - #6 if
INFO  14:01:11,350 - #36 (
INFO  14:01:11,350 - #18 -
INFO  14:01:11,350 - #45 size
INFO  14:01:11,351 - #22 <
INFO  14:01:11,351 - #45 x
INFO  14:01:11,351 - #26 &&
INFO  14:01:11,351 - #45 x
INFO  14:01:11,351 - #22 <
INFO  14:01:11,351 - #42 0
INFO  14:01:11,351 - #37 )
INFO  14:01:11,351 - #40 {
INFO  14:01:11,351 - #45 val
INFO  14:01:11,351 - #35 .
INFO  14:01:11,351 - #45 putn
INFO  14:01:11,351 - #36 (
INFO  14:01:11,351 - #45 val
INFO  14:01:11,351 - #35 .
INFO  14:01:11,351 - #45 getn
INFO  14:01:11,351 - #36 (
INFO  14:01:11,351 - #18 -
INFO  14:01:11,351 - #45 x
INFO  14:01:11,351 - #37 )
INFO  14:01:11,351 - #17 +
INFO  14:01:11,351 - #42 1
INFO  14:01:11,351 - #37 )
INFO  14:01:11,353 - #33 ;
INFO  14:01:11,353 - #41 }
INFO  14:01:11,353 - #9 read
INFO  14:01:11,353 - #36 (
INFO  14:01:11,353 - #45 x
INFO  14:01:11,353 - #37 )
INFO  14:01:11,353 - #33 ;
INFO  14:01:11,353 - #41 }
INFO  14:01:11,353 - #13 while
INFO  14:01:11,353 - #36 (
INFO  14:01:11,353 - #43 true
INFO  14:01:11,353 - #37 )
INFO  14:01:11,354 - #33 ;
INFO  14:01:11,354 - #41 }
INFO  14:01:11,354 - #41 }
INFO  14:01:11,354 - Print calls = 262
