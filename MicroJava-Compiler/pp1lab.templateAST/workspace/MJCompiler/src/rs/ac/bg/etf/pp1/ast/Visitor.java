// generated with ast extension for cup
// version 0.8
// 8/3/2018 23:48:46


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(DeclarationList DeclarationList);
    public void visit(OptionalNumConst OptionalNumConst);
    public void visit(Mulop Mulop);
    public void visit(Relop Relop);
    public void visit(OptionalBracketExpr OptionalBracketExpr);
    public void visit(OptionalBrackets OptionalBrackets);
    public void visit(StatementList StatementList);
    public void visit(ActParams ActParams);
    public void visit(Addop Addop);
    public void visit(Factor Factor);
    public void visit(AddOpTermList AddOpTermList);
    public void visit(CondTerm CondTerm);
    public void visit(ClassVarDeclarations ClassVarDeclarations);
    public void visit(Term Term);
    public void visit(Condition Condition);
    public void visit(OptionalActParams OptionalActParams);
    public void visit(ConstChoiceList ConstChoiceList);
    public void visit(ConstChoice ConstChoice);
    public void visit(OptionalFormParams OptionalFormParams);
    public void visit(VarDeclList VarDeclList);
    public void visit(FormalParamList FormalParamList);
    public void visit(Expr Expr);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(OptionalRelopExpr OptionalRelopExpr);
    public void visit(DesignatorList DesignatorList);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(DeclarationListElement DeclarationListElement);
    public void visit(DesignatorStatementBodyOptional DesignatorStatementBodyOptional);
    public void visit(Statement Statement);
    public void visit(OptionalElseStatement OptionalElseStatement);
    public void visit(OptionalExpression OptionalExpression);
    public void visit(OptionalOptionalActParams OptionalOptionalActParams);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(OptionalMethodDeclarations OptionalMethodDeclarations);
    public void visit(OptionalMinus OptionalMinus);
    public void visit(OptionalExtend OptionalExtend);
    public void visit(MulopDerived3 MulopDerived3);
    public void visit(MulopDerived2 MulopDerived2);
    public void visit(MulopDerived1 MulopDerived1);
    public void visit(AddopDerived2 AddopDerived2);
    public void visit(AddopDerived1 AddopDerived1);
    public void visit(RelopDerived6 RelopDerived6);
    public void visit(RelopDerived5 RelopDerived5);
    public void visit(RelopDerived4 RelopDerived4);
    public void visit(RelopDerived3 RelopDerived3);
    public void visit(RelopDerived2 RelopDerived2);
    public void visit(RelopDerived1 RelopDerived1);
    public void visit(OptionalBracketExprEmpty OptionalBracketExprEmpty);
    public void visit(OptionalBracketExprNotEmpty OptionalBracketExprNotEmpty);
    public void visit(BracketFactorExpr BracketFactorExpr);
    public void visit(NewFactorExpr NewFactorExpr);
    public void visit(BoolConst BoolConst);
    public void visit(CharConst CharConst);
    public void visit(NumConst NumConst);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(TermFactor TermFactor);
    public void visit(TermFactorList TermFactorList);
    public void visit(AddOpTermListEmpty AddOpTermListEmpty);
    public void visit(AddOpTermListNotEmpty AddOpTermListNotEmpty);
    public void visit(OptionalMinusNotExists OptionalMinusNotExists);
    public void visit(OptionalMinusExists OptionalMinusExists);
    public void visit(ExprDerived1 ExprDerived1);
    public void visit(OptionalRelopExprEmpty OptionalRelopExprEmpty);
    public void visit(OptionalRelopExprNotEmpty OptionalRelopExprNotEmpty);
    public void visit(CondFact CondFact);
    public void visit(CondTermFact CondTermFact);
    public void visit(CondTermList CondTermList);
    public void visit(ConditionTerm ConditionTerm);
    public void visit(ConditionList ConditionList);
    public void visit(ActParam ActParam);
    public void visit(ActParamsList ActParamsList);
    public void visit(OptionalActParamsEmpty OptionalActParamsEmpty);
    public void visit(OptionalActParamsNotEmpty OptionalActParamsNotEmpty);
    public void visit(DesignatorBodyDec DesignatorBodyDec);
    public void visit(DesignatorBodyInc DesignatorBodyInc);
    public void visit(DesignatorBodyArguments DesignatorBodyArguments);
    public void visit(DesignatorBodyExpression DesignatorBodyExpression);
    public void visit(DesignatorListEmpty DesignatorListEmpty);
    public void visit(DesignatorListNotEmptyExpr DesignatorListNotEmptyExpr);
    public void visit(DesignatorListNotEmptyIdent DesignatorListNotEmptyIdent);
    public void visit(Designator Designator);
    public void visit(DesignatorStatementBody DesignatorStatementBody);
    public void visit(OptionalElseStatementEmpty OptionalElseStatementEmpty);
    public void visit(OptionalElseStatementNotEmpty OptionalElseStatementNotEmpty);
    public void visit(ListStatement ListStatement);
    public void visit(PrintStatement PrintStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(ReturnStatement ReturnStatement);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(DoStatement DoStatement);
    public void visit(IfStatement IfStatement);
    public void visit(DesigStatement DesigStatement);
    public void visit(StatementListNotEmpty StatementListNotEmpty);
    public void visit(StatementListEmpty StatementListEmpty);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(SingleFormalParamDeclaration SingleFormalParamDeclaration);
    public void visit(MultiFormalParamDeclarations MultiFormalParamDeclarations);
    public void visit(FormParamsEmpty FormParamsEmpty);
    public void visit(FormParamsNotEmpty FormParamsNotEmpty);
    public void visit(MethodTypeNameVoid MethodTypeNameVoid);
    public void visit(MethodTypeNameNotVoid MethodTypeNameNotVoid);
    public void visit(MethodDecl MethodDecl);
    public void visit(MethodDeclarationsEmpty MethodDeclarationsEmpty);
    public void visit(MethodDeclarationsNotEmpty MethodDeclarationsNotEmpty);
    public void visit(Type Type);
    public void visit(OptionalMethodDeclarationsEmpty OptionalMethodDeclarationsEmpty);
    public void visit(OptionalMethodDeclarationsNotEmpty OptionalMethodDeclarationsNotEmpty);
    public void visit(ClassVarDeclarationEmpty ClassVarDeclarationEmpty);
    public void visit(ClassVarDeclarationsNotEmpty ClassVarDeclarationsNotEmpty);
    public void visit(ClassBody ClassBody);
    public void visit(OptionalExtendNotExist OptionalExtendNotExist);
    public void visit(OptionalExtendExists OptionalExtendExists);
    public void visit(ClassDecl ClassDecl);
    public void visit(VarDeclListEmpty VarDeclListEmpty);
    public void visit(VarDeclListNotEmpty VarDeclListNotEmpty);
    public void visit(NoBrackets NoBrackets);
    public void visit(Brackets Brackets);
    public void visit(VarDecl VarDecl);
    public void visit(ConstChoiceListEmpty ConstChoiceListEmpty);
    public void visit(ConstChoiceListNotEmpty ConstChoiceListNotEmpty);
    public void visit(ConstChoiceBool ConstChoiceBool);
    public void visit(ConstChoiceChar ConstChoiceChar);
    public void visit(ConstChoiceNum ConstChoiceNum);
    public void visit(ConstDecl ConstDecl);
    public void visit(DeclarationListClassElement DeclarationListClassElement);
    public void visit(DeclarationListVarElement DeclarationListVarElement);
    public void visit(DeclarationListConstElement DeclarationListConstElement);
    public void visit(DeclarationListEmpty DeclarationListEmpty);
    public void visit(DeclarationListNotEmpty DeclarationListNotEmpty);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
